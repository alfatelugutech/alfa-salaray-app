{"version":3,"file":"AttendanceReports-OF1H5rKq.js","sources":["../../src/pages/AttendanceReports.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { Calendar, CheckCircle, XCircle, Clock, AlertCircle, Home, BarChart3 } from 'lucide-react'\nimport { attendanceService } from '../services/attendanceService'\nimport { employeeService } from '../services/employeeService'\n\nconst AttendanceReports: React.FC = () => {\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7))\n  const [selectedEmployee, setSelectedEmployee] = useState<string>('all')\n  const [smartInsights, setSmartInsights] = useState<any>(null)\n\n  // Fetch employees\n  const { data: employeesData } = useQuery(\n    'employees',\n    () => employeeService.getEmployees({ page: 1, limit: 1000 })\n  )\n\n  // Fetch attendance data for the month\n  const { data: attendanceData, isLoading } = useQuery(\n    ['attendance-reports', selectedMonth, selectedEmployee],\n    () => {\n      const startDate = new Date(selectedMonth + '-01')\n      const endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0)\n      \n      return attendanceService.getAttendance({\n        startDate: startDate.toISOString().split('T')[0],\n        endDate: endDate.toISOString().split('T')[0],\n        employeeId: selectedEmployee !== 'all' ? selectedEmployee : undefined\n      })\n    },\n    {\n      onSuccess: (data) => {\n        console.log('📊 Attendance Reports Data:', {\n          selectedMonth,\n          selectedEmployee,\n          data: data,\n          attendances: data?.data?.attendances\n        })\n      }\n    }\n  )\n\n  // Smart insights calculation\n  const calculateSmartInsights = (data: any) => {\n    if (!data?.data?.attendances) return null\n    \n    const attendances = data.data.attendances\n    const totalDays = attendances.length\n    const presentDays = attendances.filter((att: any) => att.status === 'PRESENT').length\n    const lateDays = attendances.filter((att: any) => att.status === 'LATE').length\n    const absentDays = attendances.filter((att: any) => att.status === 'ABSENT').length\n    const attendanceRate = totalDays > 0 ? (presentDays / totalDays) * 100 : 0\n    \n    return {\n      totalDays,\n      presentDays,\n      lateDays,\n      absentDays,\n      attendanceRate,\n      insights: [\n        attendanceRate >= 95 ? '🌟 Excellent attendance record!' : \n        attendanceRate >= 85 ? '👍 Good attendance performance' :\n        attendanceRate >= 70 ? '⚠️ Attendance needs improvement' : '🚨 Poor attendance record',\n        lateDays > 0 ? `⏰ ${lateDays} late arrival${lateDays > 1 ? 's' : ''} this month` : '✅ No late arrivals',\n        absentDays > 0 ? `❌ ${absentDays} absent day${absentDays > 1 ? 's' : ''} this month` : '✅ Perfect attendance'\n      ]\n    }\n  }\n\n  // Generate calendar data\n  const generateCalendarData = () => {\n    const year = parseInt(selectedMonth.split('-')[0])\n    const month = parseInt(selectedMonth.split('-')[1]) - 1\n    const startDate = new Date(year, month, 1)\n    const endDate = new Date(year, month + 1, 0)\n    \n    const calendar = []\n    const currentDate = new Date(startDate)\n    \n    // Add empty cells for days before month starts\n    const startDay = startDate.getDay()\n    for (let i = 0; i < startDay; i++) {\n      calendar.push({ date: null, attendance: null })\n    }\n    \n    // Add days of the month\n    while (currentDate <= endDate) {\n      const dateStr = currentDate.toISOString().split('T')[0]\n      const attendance = attendanceData?.data?.attendances?.find(\n        (att: any) => {\n          // Handle different date formats\n          const attDate = new Date(att.date).toISOString().split('T')[0]\n          return attDate === dateStr\n        }\n      )\n      \n      console.log('📅 Calendar day:', {\n        date: dateStr,\n        hasAttendance: !!attendance,\n        attendance: attendance,\n        allAttendances: attendanceData?.data?.attendances\n      })\n      \n      calendar.push({\n        date: new Date(currentDate),\n        attendance: attendance\n      })\n      \n      currentDate.setDate(currentDate.getDate() + 1)\n    }\n    \n    return calendar\n  }\n\n  // Get status color for calendar\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'PRESENT': return 'bg-green-500'\n      case 'LATE': return 'bg-yellow-500'\n      case 'ABSENT': return 'bg-red-500'\n      case 'HALF_DAY': return 'bg-blue-500'\n      case 'EARLY_LEAVE': return 'bg-orange-500'\n      default: return 'bg-gray-300'\n    }\n  }\n\n  // Get status icon\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'PRESENT': return <CheckCircle className=\"w-4 h-4 text-white\" />\n      case 'LATE': return <Clock className=\"w-4 h-4 text-white\" />\n      case 'ABSENT': return <XCircle className=\"w-4 h-4 text-white\" />\n      case 'HALF_DAY': return <AlertCircle className=\"w-4 h-4 text-white\" />\n      case 'EARLY_LEAVE': return <Home className=\"w-4 h-4 text-white\" />\n      default: return <div className=\"w-4 h-4\" />\n    }\n  }\n\n  // Calculate statistics\n  const calculateStats = () => {\n    if (!attendanceData?.data?.attendances) return null\n    \n    const attendances = attendanceData.data.attendances\n    const totalDays = attendances.length\n    const presentCount = attendances.filter((att: any) => att.status === 'PRESENT').length\n    const lateCount = attendances.filter((att: any) => att.status === 'LATE').length\n    const absentCount = attendances.filter((att: any) => att.status === 'ABSENT').length\n    const halfDayCount = attendances.filter((att: any) => att.status === 'HALF_DAY').length\n    const earlyLeaveCount = attendances.filter((att: any) => att.status === 'EARLY_LEAVE').length\n    \n    const attendanceRate = totalDays > 0 ? ((presentCount + lateCount) / totalDays) * 100 : 0\n    \n    return {\n      totalDays,\n      presentCount,\n      lateCount,\n      absentCount,\n      halfDayCount,\n      earlyLeaveCount,\n      attendanceRate\n    }\n  }\n\n  const stats = calculateStats()\n  const calendarData = generateCalendarData()\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Attendance Reports</h1>\n          <p className=\"text-gray-600\">Visual attendance tracking and analytics</p>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-sm text-gray-600\">\n            {new Date(selectedMonth + '-01').toLocaleDateString('en-US', { \n              year: 'numeric', \n              month: 'long' \n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"label\">Select Month</label>\n          <input\n            type=\"month\"\n            value={selectedMonth}\n            onChange={(e) => setSelectedMonth(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div>\n          <label className=\"label\">Select Employee</label>\n          <select\n            value={selectedEmployee}\n            onChange={(e) => setSelectedEmployee(e.target.value)}\n            className=\"input\"\n          >\n            <option value=\"all\">All Employees</option>\n            {employeesData?.data?.employees?.map((employee: any) => (\n              <option key={employee.id} value={employee.id}>\n                {employee.user.firstName} {employee.user.lastName}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      {stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Days</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalDays}</p>\n              </div>\n              <div className=\"p-3 bg-blue-100 rounded-full\">\n                <Calendar className=\"w-6 h-6 text-blue-600\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Present</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.presentCount}</p>\n              </div>\n              <div className=\"p-3 bg-green-100 rounded-full\">\n                <CheckCircle className=\"w-6 h-6 text-green-600\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Late</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.lateCount}</p>\n              </div>\n              <div className=\"p-3 bg-yellow-100 rounded-full\">\n                <Clock className=\"w-6 h-6 text-yellow-600\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Absent</p>\n                <p className=\"text-2xl font-bold text-red-600\">{stats.absentCount}</p>\n              </div>\n              <div className=\"p-3 bg-red-100 rounded-full\">\n                <XCircle className=\"w-6 h-6 text-red-600\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Attendance Rate */}\n      {stats && (\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Attendance Rate</h3>\n            <div className=\"text-3xl font-bold text-blue-600\">\n              {stats.attendanceRate.toFixed(1)}%\n            </div>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-4\">\n            <div \n              className=\"bg-blue-600 h-4 rounded-full transition-all duration-300\"\n              style={{ width: `${stats.attendanceRate}%` }}\n            ></div>\n          </div>\n        </div>\n      )}\n\n      {/* Calendar View */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\n            <BarChart3 className=\"w-5 h-5\" />\n            Monthly Calendar View\n          </h3>\n        </div>\n        <div className=\"p-6\">\n          {isLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n              <p className=\"text-gray-600 mt-2\">Loading attendance data...</p>\n            </div>\n          ) : !attendanceData?.data?.attendances?.length ? (\n            <div className=\"text-center py-8\">\n              <Calendar className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-600\">No attendance data found for this month</p>\n              <p className=\"text-sm text-gray-500 mt-2\">\n                Try selecting a different month or employee\n              </p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-7 gap-2\">\n              {/* Day headers */}\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n                  {day}\n                </div>\n              ))}\n              \n              {/* Calendar days */}\n              {calendarData.map((day, index) => (\n                <div\n                  key={index}\n                  className={`p-2 min-h-[60px] border rounded-lg flex flex-col items-center justify-center relative ${\n                    day.date ? 'bg-white hover:bg-gray-50 cursor-pointer' : 'bg-gray-50'\n                  }`}\n                >\n                  {day.date && (\n                    <>\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {day.date.getDate()}\n                      </div>\n                      {day.attendance ? (\n                        <div className=\"mt-1 flex flex-col items-center\">\n                          <div className={`w-4 h-4 rounded-full ${getStatusColor(day.attendance.status)} shadow-sm`}></div>\n                          <div className=\"text-xs text-gray-600 mt-1\">\n                            {day.attendance.status}\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"mt-1\">\n                          <div className=\"w-4 h-4 rounded-full bg-gray-200\"></div>\n                        </div>\n                      )}\n                    </>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Legend */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Legend</h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-green-500 rounded-full\"></div>\n            <span className=\"text-sm text-gray-700\">Present</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-yellow-500 rounded-full\"></div>\n            <span className=\"text-sm text-gray-700\">Late</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-red-500 rounded-full\"></div>\n            <span className=\"text-sm text-gray-700\">Absent</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-blue-500 rounded-full\"></div>\n            <span className=\"text-sm text-gray-700\">Half Day</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-orange-500 rounded-full\"></div>\n            <span className=\"text-sm text-gray-700\">Early Leave</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AttendanceReports\n"],"names":["AttendanceReports","selectedMonth","setSelectedMonth","useState","selectedEmployee","setSelectedEmployee","smartInsights","setSmartInsights","employeesData","useQuery","employeeService","attendanceData","isLoading","startDate","endDate","attendanceService","data","_a","generateCalendarData","year","month","calendar","currentDate","startDay","i","dateStr","attendance","_b","att","_c","getStatusColor","status","stats","attendances","totalDays","presentCount","lateCount","absentCount","halfDayCount","earlyLeaveCount","attendanceRate","calendarData","jsxs","jsx","e","employee","Calendar","CheckCircle","Clock","XCircle","BarChart3","_d","day","index","Fragment"],"mappings":"yVAMA,MAAMA,EAA8B,IAAM,aACxC,KAAM,CAACC,EAAeC,CAAgB,EAAIC,EAAAA,SAAS,IAAI,KAAA,EAAO,YAAA,EAAc,MAAM,EAAG,CAAC,CAAC,EACjF,CAACC,EAAkBC,CAAmB,EAAIF,EAAAA,SAAiB,KAAK,EAChE,CAACG,EAAeC,CAAgB,EAAIJ,EAAAA,SAAc,IAAI,EAGtD,CAAE,KAAMK,CAAA,EAAkBC,EAC9B,YACA,IAAMC,EAAgB,aAAa,CAAE,KAAM,EAAG,MAAO,IAAM,CAAA,EAIvD,CAAE,KAAMC,EAAgB,UAAAC,CAAA,EAAcH,EAC1C,CAAC,qBAAsBR,EAAeG,CAAgB,EACtD,IAAM,CACJ,MAAMS,EAAY,IAAI,KAAKZ,EAAgB,KAAK,EAC1Ca,EAAU,IAAI,KAAKD,EAAU,cAAeA,EAAU,SAAA,EAAa,EAAG,CAAC,EAE7E,OAAOE,EAAkB,cAAc,CACrC,UAAWF,EAAU,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EAC/C,QAASC,EAAQ,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EAC3C,WAAYV,IAAqB,MAAQA,EAAmB,MAAA,CAC7D,CACH,EACA,CACE,UAAYY,GAAS,OACnB,QAAQ,IAAI,8BAA+B,CACzC,cAAAf,EACA,iBAAAG,EACA,KAAAY,EACA,aAAaC,EAAAD,GAAA,YAAAA,EAAM,OAAN,YAAAC,EAAY,WAAA,CAC1B,CACH,CAAA,CACF,EA+BIC,EAAuB,IAAM,WACjC,MAAMC,EAAO,SAASlB,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC,EAC3CmB,EAAQ,SAASnB,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC,EAAI,EAChDY,EAAY,IAAI,KAAKM,EAAMC,EAAO,CAAC,EACnCN,EAAU,IAAI,KAAKK,EAAMC,EAAQ,EAAG,CAAC,EAErCC,EAAW,CAAA,EACXC,EAAc,IAAI,KAAKT,CAAS,EAGhCU,EAAWV,EAAU,OAAA,EAC3B,QAASW,EAAI,EAAGA,EAAID,EAAUC,IAC5BH,EAAS,KAAK,CAAE,KAAM,KAAM,WAAY,KAAM,EAIhD,KAAOC,GAAeR,GAAS,CAC7B,MAAMW,EAAUH,EAAY,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EAChDI,GAAaC,GAAAV,EAAAN,GAAA,YAAAA,EAAgB,OAAhB,YAAAM,EAAsB,cAAtB,YAAAU,EAAmC,KACnDC,GAEiB,IAAI,KAAKA,EAAI,IAAI,EAAE,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,IAC1CH,GAIvB,QAAQ,IAAI,mBAAoB,CAC9B,KAAMA,EACN,cAAe,CAAC,CAACC,EACjB,WAAAA,EACA,gBAAgBG,EAAAlB,GAAA,YAAAA,EAAgB,OAAhB,YAAAkB,EAAsB,WAAA,CACvC,EAEDR,EAAS,KAAK,CACZ,KAAM,IAAI,KAAKC,CAAW,EAC1B,WAAAI,CAAA,CACD,EAEDJ,EAAY,QAAQA,EAAY,QAAA,EAAY,CAAC,CAC/C,CAEA,OAAOD,CACT,EAGMS,EAAkBC,GAAmB,CACzC,OAAQA,EAAA,CACN,IAAK,UAAW,MAAO,eACvB,IAAK,OAAQ,MAAO,gBACpB,IAAK,SAAU,MAAO,aACtB,IAAK,WAAY,MAAO,cACxB,IAAK,cAAe,MAAO,gBAC3B,QAAS,MAAO,aAAA,CAEpB,EAuCMC,GAxBiB,IAAM,OAC3B,GAAI,GAACf,EAAAN,GAAA,YAAAA,EAAgB,OAAhB,MAAAM,EAAsB,aAAa,OAAO,KAE/C,MAAMgB,EAActB,EAAe,KAAK,YAClCuB,EAAYD,EAAY,OACxBE,EAAeF,EAAY,OAAQL,GAAaA,EAAI,SAAW,SAAS,EAAE,OAC1EQ,EAAYH,EAAY,OAAQL,GAAaA,EAAI,SAAW,MAAM,EAAE,OACpES,EAAcJ,EAAY,OAAQL,GAAaA,EAAI,SAAW,QAAQ,EAAE,OACxEU,EAAeL,EAAY,OAAQL,GAAaA,EAAI,SAAW,UAAU,EAAE,OAC3EW,EAAkBN,EAAY,OAAQL,GAAaA,EAAI,SAAW,aAAa,EAAE,OAEjFY,EAAiBN,EAAY,GAAMC,EAAeC,GAAaF,EAAa,IAAM,EAExF,MAAO,CACL,UAAAA,EACA,aAAAC,EACA,UAAAC,EACA,YAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,eAAAC,CAAA,CAEJ,GAEc,EACRC,EAAevB,EAAA,EAErB,OACEwB,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,qBAAkB,EACnEA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,0CAAA,CAAwC,CAAA,EACvE,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,0BACb,eAAC,MAAA,CAAI,UAAU,wBACZ,SAAA,IAAI,KAAK1C,EAAgB,KAAK,EAAE,mBAAmB,QAAS,CAC3D,KAAM,UACN,MAAO,MAAA,CACR,EACH,CAAA,CACF,CAAA,EACF,EAGAyC,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,QAAQ,SAAA,eAAY,EACrCA,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,MAAO1C,EACP,SAAW2C,GAAM1C,EAAiB0C,EAAE,OAAO,KAAK,EAChD,UAAU,OAAA,CAAA,CACZ,EACF,SACC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,QAAA,CAAM,UAAU,QAAQ,SAAA,kBAAe,EACxCD,EAAAA,KAAC,SAAA,CACC,MAAOtC,EACP,SAAWwC,GAAMvC,EAAoBuC,EAAE,OAAO,KAAK,EACnD,UAAU,QAEV,SAAA,CAAAD,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,gBAAa,GAChChB,GAAAV,EAAAT,GAAA,YAAAA,EAAe,OAAf,YAAAS,EAAqB,YAArB,YAAAU,EAAgC,IAAKkB,GACpCH,OAAC,SAAA,CAAyB,MAAOG,EAAS,GACvC,SAAA,CAAAA,EAAS,KAAK,UAAU,IAAEA,EAAS,KAAK,QAAA,CAAA,EAD9BA,EAAS,EAEtB,EACD,CAAA,CAAA,CACH,CAAA,CACF,CAAA,EACF,EAGCb,GACCU,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,2CACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAoC,SAAA,aAAU,EAC3DA,EAAAA,IAAC,IAAA,CAAE,UAAU,mCAAoC,WAAM,SAAA,CAAU,CAAA,EACnE,EACAA,EAAAA,IAAC,OAAI,UAAU,+BACb,eAACG,EAAA,CAAS,UAAU,wBAAwB,CAAA,CAC9C,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,2CACb,SAAAJ,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAoC,SAAA,UAAO,EACxDA,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAqC,WAAM,YAAA,CAAa,CAAA,EACvE,EACAA,EAAAA,IAAC,OAAI,UAAU,gCACb,eAACI,EAAA,CAAY,UAAU,yBAAyB,CAAA,CAClD,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,2CACb,SAAAL,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAoC,SAAA,OAAI,EACrDA,EAAAA,IAAC,IAAA,CAAE,UAAU,qCAAsC,WAAM,SAAA,CAAU,CAAA,EACrE,EACAA,EAAAA,IAAC,OAAI,UAAU,iCACb,eAACK,EAAA,CAAM,UAAU,0BAA0B,CAAA,CAC7C,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,2CACb,SAAAN,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,oCAAoC,SAAA,SAAM,EACvDA,EAAAA,IAAC,IAAA,CAAE,UAAU,kCAAmC,WAAM,WAAA,CAAY,CAAA,EACpE,EACAA,EAAAA,IAAC,OAAI,UAAU,8BACb,eAACM,EAAA,CAAQ,UAAU,uBAAuB,CAAA,CAC5C,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIDjB,GACCU,EAAAA,KAAC,MAAA,CAAI,UAAU,2CACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,kBAAe,EACnED,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACZ,SAAA,CAAAV,EAAM,eAAe,QAAQ,CAAC,EAAE,GAAA,CAAA,CACnC,CAAA,EACF,EACAW,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAU,2DACV,MAAO,CAAE,MAAO,GAAGX,EAAM,cAAc,GAAA,CAAI,CAAA,CAC5C,CACH,CAAA,EACF,EAIFU,EAAAA,KAAC,MAAA,CAAI,UAAU,uCACb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAD,EAAAA,KAAC,KAAA,CAAG,UAAU,8DACZ,SAAA,CAAAC,EAAAA,IAACO,EAAA,CAAU,UAAU,SAAA,CAAU,EAAE,uBAAA,CAAA,CAEnC,CAAA,CACF,EACAP,EAAAA,IAAC,OAAI,UAAU,MACZ,WACCD,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,sEAAA,CAAuE,EACtFA,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,4BAAA,CAA0B,CAAA,CAAA,CAC9D,GACGQ,GAAAtB,EAAAlB,GAAA,YAAAA,EAAgB,OAAhB,YAAAkB,EAAsB,cAAtB,MAAAsB,EAAmC,OAStCT,EAAAA,KAAC,MAAA,CAAI,UAAU,yBAEZ,SAAA,CAAA,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAAE,IAAIU,SACpD,MAAA,CAAc,UAAU,oDACtB,SAAAA,GADOA,CAEV,CACD,EAGAX,EAAa,IAAI,CAACW,EAAKC,IACtBV,EAAAA,IAAC,MAAA,CAEC,UAAW,yFACTS,EAAI,KAAO,2CAA6C,YAC1D,GAEC,SAAAA,EAAI,MACHV,EAAAA,KAAAY,EAAAA,SAAA,CACE,SAAA,CAAAX,MAAC,OAAI,UAAU,oCACZ,SAAAS,EAAI,KAAK,UACZ,EACCA,EAAI,WACHV,OAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAW,wBAAwBb,EAAesB,EAAI,WAAW,MAAM,CAAC,YAAA,CAAc,QAC1F,MAAA,CAAI,UAAU,6BACZ,SAAAA,EAAI,WAAW,MAAA,CAClB,CAAA,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,OACb,SAAAT,EAAAA,IAAC,MAAA,CAAI,UAAU,kCAAA,CAAmC,CAAA,CACpD,CAAA,CAAA,CAEJ,CAAA,EAtBGU,CAAA,CAyBR,CAAA,CAAA,CACH,EA7CAX,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAACG,EAAA,CAAS,UAAU,sCAAA,CAAuC,EAC3DH,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,0CAAuC,EACpEA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,6CAAA,CAE1C,CAAA,CAAA,CACF,CAuCA,CAEJ,CAAA,EACF,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,2CACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,2CAA2C,SAAA,SAAM,EAC/DD,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,mCAAA,CAAoC,EACnDA,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,SAAA,CAAO,CAAA,EACjD,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAA,CAAqC,EACpDA,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,MAAA,CAAI,CAAA,EAC9C,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,iCAAA,CAAkC,EACjDA,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,QAAA,CAAM,CAAA,EAChD,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,kCAAA,CAAmC,EAClDA,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,UAAA,CAAQ,CAAA,EAClD,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAA,CAAqC,EACpDA,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,aAAA,CAAW,CAAA,CAAA,CACrD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}