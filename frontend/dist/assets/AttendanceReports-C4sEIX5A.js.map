{"version":3,"file":"AttendanceReports-C4sEIX5A.js","sources":["../../src/pages/AttendanceReports.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport { Calendar, CheckCircle, XCircle, Clock, AlertCircle, Home, BarChart3 } from 'lucide-react'\r\nimport { attendanceService } from '../services/attendanceService'\r\nimport { employeeService } from '../services/employeeService'\r\n\r\nconst AttendanceReports: React.FC = () => {\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7))\r\n  const [selectedEmployee, setSelectedEmployee] = useState<string>('all')\r\n\r\n  // Fetch employees\r\n  const { data: employeesData } = useQuery(\r\n    'employees',\r\n    () => employeeService.getEmployees({ page: 1, limit: 1000 })\r\n  )\r\n\r\n  // Fetch attendance data for the month\r\n  const { data: attendanceData, isLoading } = useQuery(\r\n    ['attendance-reports', selectedMonth, selectedEmployee],\r\n    () => {\r\n      const startDate = new Date(selectedMonth + '-01')\r\n      const endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0)\r\n      \r\n      return attendanceService.getAttendance({\r\n        startDate: startDate.toISOString().split('T')[0],\r\n        endDate: endDate.toISOString().split('T')[0],\r\n        employeeId: selectedEmployee !== 'all' ? selectedEmployee : undefined\r\n      })\r\n    }\r\n  )\r\n\r\n  // Generate calendar data\r\n  const generateCalendarData = () => {\r\n    const year = parseInt(selectedMonth.split('-')[0])\r\n    const month = parseInt(selectedMonth.split('-')[1]) - 1\r\n    const startDate = new Date(year, month, 1)\r\n    const endDate = new Date(year, month + 1, 0)\r\n    \r\n    const calendar = []\r\n    const currentDate = new Date(startDate)\r\n    \r\n    // Add empty cells for days before month starts\r\n    const startDay = startDate.getDay()\r\n    for (let i = 0; i < startDay; i++) {\r\n      calendar.push({ date: null, attendance: null })\r\n    }\r\n    \r\n    // Add days of the month\r\n    while (currentDate <= endDate) {\r\n      const dateStr = currentDate.toISOString().split('T')[0]\r\n      const attendance = attendanceData?.data?.attendances?.find(\r\n        (att: any) => att.date === dateStr\r\n      )\r\n      \r\n      calendar.push({\r\n        date: new Date(currentDate),\r\n        attendance: attendance\r\n      })\r\n      \r\n      currentDate.setDate(currentDate.getDate() + 1)\r\n    }\r\n    \r\n    return calendar\r\n  }\r\n\r\n  // Get status color for calendar\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'PRESENT': return 'bg-green-500'\r\n      case 'LATE': return 'bg-yellow-500'\r\n      case 'ABSENT': return 'bg-red-500'\r\n      case 'HALF_DAY': return 'bg-blue-500'\r\n      case 'EARLY_LEAVE': return 'bg-orange-500'\r\n      default: return 'bg-gray-300'\r\n    }\r\n  }\r\n\r\n  // Get status icon\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'PRESENT': return <CheckCircle className=\"w-4 h-4 text-white\" />\r\n      case 'LATE': return <Clock className=\"w-4 h-4 text-white\" />\r\n      case 'ABSENT': return <XCircle className=\"w-4 h-4 text-white\" />\r\n      case 'HALF_DAY': return <AlertCircle className=\"w-4 h-4 text-white\" />\r\n      case 'EARLY_LEAVE': return <Home className=\"w-4 h-4 text-white\" />\r\n      default: return <div className=\"w-4 h-4\" />\r\n    }\r\n  }\r\n\r\n  // Calculate statistics\r\n  const calculateStats = () => {\r\n    if (!attendanceData?.data?.attendances) return null\r\n    \r\n    const attendances = attendanceData.data.attendances\r\n    const totalDays = attendances.length\r\n    const presentCount = attendances.filter((att: any) => att.status === 'PRESENT').length\r\n    const lateCount = attendances.filter((att: any) => att.status === 'LATE').length\r\n    const absentCount = attendances.filter((att: any) => att.status === 'ABSENT').length\r\n    const halfDayCount = attendances.filter((att: any) => att.status === 'HALF_DAY').length\r\n    const earlyLeaveCount = attendances.filter((att: any) => att.status === 'EARLY_LEAVE').length\r\n    \r\n    const attendanceRate = totalDays > 0 ? ((presentCount + lateCount) / totalDays) * 100 : 0\r\n    \r\n    return {\r\n      totalDays,\r\n      presentCount,\r\n      lateCount,\r\n      absentCount,\r\n      halfDayCount,\r\n      earlyLeaveCount,\r\n      attendanceRate\r\n    }\r\n  }\r\n\r\n  const stats = calculateStats()\r\n  const calendarData = generateCalendarData()\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Attendance Reports</h1>\r\n          <p className=\"text-gray-600\">Visual attendance tracking and analytics</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"text-sm text-gray-600\">\r\n            {new Date(selectedMonth + '-01').toLocaleDateString('en-US', { \r\n              year: 'numeric', \r\n              month: 'long' \r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"label\">Select Month</label>\r\n          <input\r\n            type=\"month\"\r\n            value={selectedMonth}\r\n            onChange={(e) => setSelectedMonth(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"label\">Select Employee</label>\r\n          <select\r\n            value={selectedEmployee}\r\n            onChange={(e) => setSelectedEmployee(e.target.value)}\r\n            className=\"input\"\r\n          >\r\n            <option value=\"all\">All Employees</option>\r\n            {employeesData?.data?.employees?.map((employee: any) => (\r\n              <option key={employee.id} value={employee.id}>\r\n                {employee.user.firstName} {employee.user.lastName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      {stats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Days</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalDays}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-100 rounded-full\">\r\n                <Calendar className=\"w-6 h-6 text-blue-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Present</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">{stats.presentCount}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-100 rounded-full\">\r\n                <CheckCircle className=\"w-6 h-6 text-green-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Late</p>\r\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.lateCount}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-yellow-100 rounded-full\">\r\n                <Clock className=\"w-6 h-6 text-yellow-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Absent</p>\r\n                <p className=\"text-2xl font-bold text-red-600\">{stats.absentCount}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-red-100 rounded-full\">\r\n                <XCircle className=\"w-6 h-6 text-red-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Attendance Rate */}\r\n      {stats && (\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Attendance Rate</h3>\r\n            <div className=\"text-3xl font-bold text-blue-600\">\r\n              {stats.attendanceRate.toFixed(1)}%\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-4\">\r\n            <div \r\n              className=\"bg-blue-600 h-4 rounded-full transition-all duration-300\"\r\n              style={{ width: `${stats.attendanceRate}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Calendar View */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border\">\r\n        <div className=\"p-6 border-b border-gray-200\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n            <BarChart3 className=\"w-5 h-5\" />\r\n            Monthly Calendar View\r\n          </h3>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          {isLoading ? (\r\n            <div className=\"text-center py-8\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n              <p className=\"text-gray-600 mt-2\">Loading attendance data...</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-7 gap-2\">\r\n              {/* Day headers */}\r\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\r\n                <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\r\n                  {day}\r\n                </div>\r\n              ))}\r\n              \r\n              {/* Calendar days */}\r\n              {calendarData.map((day, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`p-2 min-h-[60px] border rounded-lg flex flex-col items-center justify-center ${\r\n                    day.date ? 'bg-white hover:bg-gray-50 cursor-pointer' : 'bg-gray-50'\r\n                  }`}\r\n                >\r\n                  {day.date && (\r\n                    <>\r\n                      <div className=\"text-sm font-medium text-gray-900\">\r\n                        {day.date.getDate()}\r\n                      </div>\r\n                      {day.attendance && (\r\n                        <div className={`w-6 h-6 rounded-full flex items-center justify-center ${getStatusColor(day.attendance.status)}`}>\r\n                          {getStatusIcon(day.attendance.status)}\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Legend</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"w-4 h-4 bg-green-500 rounded-full\"></div>\r\n            <span className=\"text-sm text-gray-700\">Present</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"w-4 h-4 bg-yellow-500 rounded-full\"></div>\r\n            <span className=\"text-sm text-gray-700\">Late</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"w-4 h-4 bg-red-500 rounded-full\"></div>\r\n            <span className=\"text-sm text-gray-700\">Absent</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"w-4 h-4 bg-blue-500 rounded-full\"></div>\r\n            <span className=\"text-sm text-gray-700\">Half Day</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"w-4 h-4 bg-orange-500 rounded-full\"></div>\r\n            <span className=\"text-sm text-gray-700\">Early Leave</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttendanceReports\r\n"],"names":["AttendanceReports","selectedMonth","setSelectedMonth","useState","selectedEmployee","setSelectedEmployee","employeesData","useQuery","employeeService","attendanceData","isLoading","startDate","endDate","attendanceService","generateCalendarData","year","month","calendar","currentDate","startDay","i","dateStr","attendance","_b","_a","att","getStatusColor","status","getStatusIcon","jsx","CheckCircle","Clock","XCircle","AlertCircle","Home","stats","attendances","totalDays","presentCount","lateCount","absentCount","halfDayCount","earlyLeaveCount","attendanceRate","calendarData","jsxs","e","employee","Calendar","BarChart3","day","index","Fragment"],"mappings":"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"}