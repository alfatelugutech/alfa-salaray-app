{"version":3,"file":"SystemSettings-DXhptZqH.js","sources":["../../src/services/settingsService.ts","../../src/components/PayrollSettings.tsx","../../src/pages/SystemSettings.tsx"],"sourcesContent":["import api from './api'\r\nimport { SystemSetting, CreateSettingData, PaginatedResponse } from '../types'\r\n\r\nexport const settingsService = {\r\n  // Get all settings\r\n  async getSettings(params?: {\r\n    page?: number\r\n    limit?: number\r\n    category?: string\r\n    search?: string\r\n  }): Promise<PaginatedResponse<SystemSetting>> {\r\n    const response = await api.get<PaginatedResponse<SystemSetting>>('/settings', { params })\r\n    return response.data\r\n  },\r\n\r\n  // Get setting by key\r\n  async getSetting(key: string): Promise<SystemSetting> {\r\n    const response = await api.get<{ success: boolean; data: { setting: SystemSetting } }>(`/settings/${key}`)\r\n    return response.data.data.setting\r\n  },\r\n\r\n  // Create setting\r\n  async createSetting(data: CreateSettingData): Promise<SystemSetting> {\r\n    const response = await api.post<{ success: boolean; data: { setting: SystemSetting } }>('/settings', data)\r\n    return response.data.data.setting\r\n  },\r\n\r\n  // Update setting\r\n  async updateSetting(key: string, data: Partial<CreateSettingData>): Promise<SystemSetting> {\r\n    const response = await api.put<{ success: boolean; data: { setting: SystemSetting } }>(`/settings/${key}`, data)\r\n    return response.data.data.setting\r\n  },\r\n\r\n  // Delete setting\r\n  async deleteSetting(key: string): Promise<void> {\r\n    await api.delete(`/settings/${key}`)\r\n  },\r\n\r\n  // Get settings by category\r\n  async getSettingsByCategory(category: string): Promise<SystemSetting[]> {\r\n    const response = await api.get<{ success: boolean; data: { settings: SystemSetting[] } }>(`/settings/category/${category}`)\r\n    return response.data.data.settings\r\n  },\r\n\r\n  // Bulk update settings\r\n  async bulkUpdateSettings(settings: Partial<SystemSetting>[]): Promise<SystemSetting[]> {\r\n    const response = await api.put<{ success: boolean; data: { settings: SystemSetting[] } }>('/settings/bulk', { settings })\r\n    return response.data.data.settings\r\n  },\r\n\r\n  // Get system configuration\r\n  async getSystemConfig(): Promise<Record<string, any>> {\r\n    const response = await api.get<{ success: boolean; data: { config: Record<string, any> } }>('/settings/config/system')\r\n    return response.data.data.config\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\r\nimport { Settings, Save, RefreshCw, Calculator, DollarSign, Clock, TrendingUp, Target, RotateCcw } from 'lucide-react'\r\nimport { payrollSettingsService, type PayrollSettings, type PayrollMethod } from '../services/payrollSettingsService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst PayrollSettings: React.FC = () => {\r\n  const [settings, setSettings] = useState<Partial<PayrollSettings>>({})\r\n  const [methods, setMethods] = useState<PayrollMethod[]>([])\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const queryClient = useQueryClient()\r\n\r\n  // Fetch current settings\r\n  const { data: settingsData, isLoading: settingsLoading } = useQuery(\r\n    'payroll-settings',\r\n    payrollSettingsService.getSettings\r\n  )\r\n\r\n  // Fetch available methods\r\n  const { data: methodsData, isLoading: methodsLoading } = useQuery(\r\n    'payroll-methods',\r\n    payrollSettingsService.getMethods\r\n  )\r\n\r\n  // Update settings mutation\r\n  const updateSettingsMutation = useMutation(payrollSettingsService.updateSettings, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('payroll-settings')\r\n      setIsEditing(false)\r\n      toast.success('Payroll settings updated successfully!')\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || 'Failed to update settings')\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (settingsData) {\r\n      setSettings(settingsData)\r\n    }\r\n  }, [settingsData])\r\n\r\n  useEffect(() => {\r\n    if (methodsData) {\r\n      setMethods(methodsData)\r\n    }\r\n  }, [methodsData])\r\n\r\n  const handleSave = () => {\r\n    updateSettingsMutation.mutate(settings)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    if (settingsData) {\r\n      setSettings(settingsData)\r\n      setIsEditing(false)\r\n    }\r\n  }\r\n\r\n  const getMethodIcon = (method: string) => {\r\n    const methodData = methods.find(m => m.value === method)\r\n    return methodData?.icon || 'ðŸ’°'\r\n  }\r\n\r\n  const getMethodLabel = (method: string) => {\r\n    const methodData = methods.find(m => m.value === method)\r\n    return methodData?.label || method\r\n  }\r\n\r\n  if (settingsLoading || methodsLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\r\n            <Settings className=\"h-6 w-6\" />\r\n            Payroll Settings\r\n          </h2>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Configure payroll calculation methods and system-wide settings\r\n          </p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          {isEditing ? (\r\n            <>\r\n              <button\r\n                onClick={handleReset}\r\n                className=\"btn btn-secondary flex items-center gap-2\"\r\n              >\r\n                <RefreshCw className=\"h-4 w-4\" />\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={handleSave}\r\n                disabled={updateSettingsMutation.isLoading}\r\n                className=\"btn btn-primary flex items-center gap-2\"\r\n              >\r\n                <Save className=\"h-4 w-4\" />\r\n                {updateSettingsMutation.isLoading ? 'Saving...' : 'Save Changes'}\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button\r\n              onClick={() => setIsEditing(true)}\r\n              className=\"btn btn-primary flex items-center gap-2\"\r\n            >\r\n              <Settings className=\"h-4 w-4\" />\r\n              Edit Settings\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Current Settings */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Default Method */}\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n              <Calculator className=\"h-5 w-5\" />\r\n              Default Calculation Method\r\n            </h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {isEditing ? (\r\n              <select\r\n                value={settings.defaultMethod || 'FIXED_SALARY'}\r\n                onChange={(e) => setSettings({ ...settings, defaultMethod: e.target.value as any })}\r\n                className=\"input w-full\"\r\n              >\r\n                {methods.map((method) => (\r\n                  <option key={method.value} value={method.value}>\r\n                    {method.icon} {method.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            ) : (\r\n              <div className=\"flex items-center gap-3\">\r\n                <span className=\"text-2xl\">{getMethodIcon(settings.defaultMethod || 'FIXED_SALARY')}</span>\r\n                <div>\r\n                  <div className=\"font-medium text-gray-900\">\r\n                    {getMethodLabel(settings.defaultMethod || 'FIXED_SALARY')}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    {methods.find(m => m.value === settings.defaultMethod)?.description}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Overtime Settings */}\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n              <Clock className=\"h-5 w-5\" />\r\n              Overtime Configuration\r\n            </h3>\r\n          </div>\r\n          <div className=\"card-body space-y-4\">\r\n            <div>\r\n              <label className=\"label\">Overtime Multiplier</label>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"number\"\r\n                  value={settings.overtimeMultiplier || 1.5}\r\n                  onChange={(e) => setSettings({ ...settings, overtimeMultiplier: Number(e.target.value) })}\r\n                  className=\"input\"\r\n                  min=\"1.0\"\r\n                  max=\"3.0\"\r\n                  step=\"0.1\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-lg font-semibold text-blue-600\">\r\n                  {settings.overtimeMultiplier || 1.5}x\r\n                </div>\r\n              )}\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Multiplier for overtime hours (e.g., 1.5x means 50% extra pay)\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"label\">Overtime Threshold (hours per day)</label>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"number\"\r\n                  value={settings.overtimeThreshold || 8}\r\n                  onChange={(e) => setSettings({ ...settings, overtimeThreshold: Number(e.target.value) })}\r\n                  className=\"input\"\r\n                  min=\"4\"\r\n                  max=\"12\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-lg font-semibold text-orange-600\">\r\n                  {settings.overtimeThreshold || 8} hours\r\n                </div>\r\n              )}\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Hours after which overtime rate applies\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Regular Hours */}\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n              <DollarSign className=\"h-5 w-5\" />\r\n              Regular Hours Configuration\r\n            </h3>\r\n          </div>\r\n          <div className=\"card-body space-y-4\">\r\n            <div>\r\n              <label className=\"label\">Regular Hours Per Month</label>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"number\"\r\n                  value={settings.regularHoursPerMonth || 160}\r\n                  onChange={(e) => setSettings({ ...settings, regularHoursPerMonth: Number(e.target.value) })}\r\n                  className=\"input\"\r\n                  min=\"80\"\r\n                  max=\"200\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-lg font-semibold text-green-600\">\r\n                  {settings.regularHoursPerMonth || 160} hours\r\n                </div>\r\n              )}\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Standard working hours per month (40 hours/week Ã— 4 weeks)\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"label\">Regular Hours Per Day</label>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"number\"\r\n                  value={settings.regularHoursPerDay || 8}\r\n                  onChange={(e) => setSettings({ ...settings, regularHoursPerDay: Number(e.target.value) })}\r\n                  className=\"input\"\r\n                  min=\"4\"\r\n                  max=\"12\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-lg font-semibold text-purple-600\">\r\n                  {settings.regularHoursPerDay || 8} hours\r\n                </div>\r\n              )}\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Standard working hours per day\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Available Methods */}\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n              <Target className=\"h-5 w-5\" />\r\n              Available Calculation Methods\r\n            </h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"space-y-3\">\r\n              {methods.map((method) => (\r\n                <div\r\n                  key={method.value}\r\n                  className={`p-3 rounded-lg border ${\r\n                    settings.defaultMethod === method.value\r\n                      ? 'border-blue-500 bg-blue-50'\r\n                      : 'border-gray-200 bg-gray-50'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"text-xl\">{method.icon}</span>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"font-medium text-gray-900\">{method.label}</div>\r\n                      <div className=\"text-sm text-gray-600\">{method.description}</div>\r\n                      <div className=\"text-xs text-gray-500 mt-1\">\r\n                        <strong>Calculation:</strong> {method.calculation}\r\n                      </div>\r\n                    </div>\r\n                    {settings.defaultMethod === method.value && (\r\n                      <div className=\"text-blue-600 font-medium text-sm\">Current</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Settings History */}\r\n      {settingsData && (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Settings Information</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n              <div>\r\n                <span className=\"text-gray-600\">Last Updated:</span>\r\n                <div className=\"font-medium\">\r\n                  {new Date(settingsData.updatedAt).toLocaleString()}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Updated By:</span>\r\n                <div className=\"font-medium\">\r\n                  {settingsData.updatedByUser.firstName} {settingsData.updatedByUser.lastName}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PayrollSettings\r\n","import React, { useState } from 'react'\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\r\nimport { Plus, Edit, Trash2, Settings, DollarSign } from 'lucide-react'\r\nimport { settingsService } from '../services/settingsService'\r\nimport { SystemSetting, CreateSettingData } from '../types'\r\nimport PayrollSettings from '../components/PayrollSettings'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst SystemSettings: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState('general')\r\n  const [showCreateModal, setShowCreateModal] = useState(false)\r\n  const [editingSetting, setEditingSetting] = useState<SystemSetting | null>(null)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [categoryFilter, setCategoryFilter] = useState('')\r\n  const [bulkEditMode, setBulkEditMode] = useState(false)\r\n  const [bulkSettings, setBulkSettings] = useState<Record<string, string>>({})\r\n\r\n  const queryClient = useQueryClient()\r\n\r\n  // Fetch settings\r\n  const { data: settingsData, isLoading: settingsLoading } = useQuery({\r\n    queryKey: ['settings', searchTerm, categoryFilter],\r\n    queryFn: () => settingsService.getSettings({\r\n      search: searchTerm,\r\n      category: categoryFilter,\r\n      limit: 100\r\n    })\r\n  })\r\n\r\n  // Fetch system configuration\r\n  const { data: systemConfig } = useQuery({\r\n    queryKey: ['system-config'],\r\n    queryFn: settingsService.getSystemConfig\r\n  })\r\n\r\n  // Create setting mutation\r\n  const createSettingMutation = useMutation({\r\n    mutationFn: settingsService.createSetting,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['settings'] })\r\n      queryClient.invalidateQueries({ queryKey: ['system-config'] })\r\n      setShowCreateModal(false)\r\n      toast.success('Setting created successfully')\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || 'Failed to create setting')\r\n    }\r\n  })\r\n\r\n  // Update setting mutation\r\n  const updateSettingMutation = useMutation({\r\n    mutationFn: ({ key, data }: { key: string; data: Partial<CreateSettingData> }) =>\r\n      settingsService.updateSetting(key, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['settings'] })\r\n      queryClient.invalidateQueries({ queryKey: ['system-config'] })\r\n      setEditingSetting(null)\r\n      toast.success('Setting updated successfully')\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || 'Failed to update setting')\r\n    }\r\n  })\r\n\r\n  // Bulk update mutation\r\n  const bulkUpdateMutation = useMutation({\r\n    mutationFn: settingsService.bulkUpdateSettings,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['settings'] })\r\n      queryClient.invalidateQueries({ queryKey: ['system-config'] })\r\n      setBulkEditMode(false)\r\n      setBulkSettings({})\r\n      toast.success('Settings updated successfully')\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || 'Failed to update settings')\r\n    }\r\n  })\r\n\r\n  // Delete setting mutation\r\n  const deleteSettingMutation = useMutation({\r\n    mutationFn: settingsService.deleteSetting,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['settings'] })\r\n      queryClient.invalidateQueries({ queryKey: ['system-config'] })\r\n      toast.success('Setting deleted successfully')\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || 'Failed to delete setting')\r\n    }\r\n  })\r\n\r\n  const handleCreateSetting = (data: CreateSettingData) => {\r\n    createSettingMutation.mutate(data)\r\n  }\r\n\r\n  const handleUpdateSetting = (key: string, data: Partial<CreateSettingData>) => {\r\n    updateSettingMutation.mutate({ key, data })\r\n  }\r\n\r\n  const handleBulkUpdate = () => {\r\n    const settings = Object.entries(bulkSettings).map(([key, value]) => ({\r\n      key,\r\n      value\r\n    }))\r\n    bulkUpdateMutation.mutate(settings)\r\n  }\r\n\r\n  const handleDeleteSetting = (key: string) => {\r\n    if (window.confirm('Are you sure you want to delete this setting?')) {\r\n      deleteSettingMutation.mutate(key)\r\n    }\r\n  }\r\n\r\n  const handleBulkEditChange = (key: string, value: string) => {\r\n    setBulkSettings(prev => ({ ...prev, [key]: value }))\r\n  }\r\n\r\n  const getTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'STRING':\r\n        return 'bg-blue-100 text-blue-800'\r\n      case 'NUMBER':\r\n        return 'bg-green-100 text-green-800'\r\n      case 'BOOLEAN':\r\n        return 'bg-purple-100 text-purple-800'\r\n      case 'JSON':\r\n        return 'bg-orange-100 text-orange-800'\r\n      default:\r\n        return 'bg-gray-100 text-gray-800'\r\n    }\r\n  }\r\n\r\n  const formatValue = (value: string, type: string) => {\r\n    if (type === 'BOOLEAN') {\r\n      return value === 'true' ? 'Yes' : 'No'\r\n    }\r\n    if (type === 'JSON') {\r\n      try {\r\n        return JSON.stringify(JSON.parse(value), null, 2)\r\n      } catch {\r\n        return value\r\n      }\r\n    }\r\n    return value\r\n  }\r\n\r\n  if (settingsLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">System Settings</h1>\r\n          <p className=\"text-gray-600\">Manage system configuration and parameters</p>\r\n        </div>\r\n        <div className=\"flex space-x-3 mt-4 sm:mt-0\">\r\n          <button\r\n            onClick={() => setBulkEditMode(!bulkEditMode)}\r\n            className={`btn ${bulkEditMode ? 'btn-primary' : 'btn-secondary'}`}\r\n          >\r\n            <Edit className=\"w-4 h-4 mr-2\" />\r\n            {bulkEditMode ? 'Exit Bulk Edit' : 'Bulk Edit'}\r\n          </button>\r\n          <button\r\n            onClick={() => setShowCreateModal(true)}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <Plus className=\"w-4 h-4 mr-2\" />\r\n            Add Setting\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* System Configuration Overview */}\r\n      {systemConfig && (\r\n        <div className=\"card p-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">System Configuration</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {Object.entries(systemConfig).map(([key, value]) => (\r\n              <div key={key} className=\"bg-gray-50 p-3 rounded-lg\">\r\n                <div className=\"text-sm font-medium text-gray-900\">{key}</div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  {typeof value === 'object' ? JSON.stringify(value) : String(value)}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          <button\r\n            onClick={() => setActiveTab('general')}\r\n            className={`py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'general'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Settings className=\"h-4 w-4 inline mr-2\" />\r\n            General Settings\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('payroll')}\r\n            className={`py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'payroll'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <DollarSign className=\"h-4 w-4 inline mr-2\" />\r\n            Payroll Settings\r\n          </button>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      {activeTab === 'payroll' ? (\r\n        <PayrollSettings />\r\n      ) : (\r\n        <>\r\n          {/* Filters */}\r\n      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n        <div className=\"flex-1\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search settings...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"input w-full\"\r\n          />\r\n        </div>\r\n        <select\r\n          value={categoryFilter}\r\n          onChange={(e) => setCategoryFilter(e.target.value)}\r\n          className=\"input w-full sm:w-48\"\r\n        >\r\n          <option value=\"\">All Categories</option>\r\n          <option value=\"SYSTEM\">System</option>\r\n          <option value=\"GENERAL\">General</option>\r\n          <option value=\"SECURITY\">Security</option>\r\n          <option value=\"NOTIFICATIONS\">Notifications</option>\r\n          <option value=\"PAYROLL\">Payroll</option>\r\n          <option value=\"ATTENDANCE\">Attendance</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Bulk Edit Actions */}\r\n      {bulkEditMode && (\r\n        <div className=\"card p-4 bg-blue-50\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 className=\"text-sm font-medium text-blue-900\">Bulk Edit Mode</h3>\r\n              <p className=\"text-sm text-blue-700\">Edit multiple settings at once</p>\r\n            </div>\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={() => {\r\n                  setBulkEditMode(false)\r\n                  setBulkSettings({})\r\n                }}\r\n                className=\"btn btn-secondary btn-sm\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleBulkUpdate}\r\n                className=\"btn btn-primary btn-sm\"\r\n                disabled={bulkUpdateMutation.isLoading}\r\n              >\r\n                {bulkUpdateMutation.isLoading ? 'Saving...' : 'Save All'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Settings Table */}\r\n      <div className=\"card overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Key\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Value\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Type\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Category\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {settingsData?.data.settings?.map((setting) => (\r\n                <tr key={setting.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm font-medium text-gray-900\">{setting.key}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4\">\r\n                    {bulkEditMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={bulkSettings[setting.key] || setting.value}\r\n                        onChange={(e) => handleBulkEditChange(setting.key, e.target.value)}\r\n                        className=\"input w-full\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"text-sm text-gray-900 max-w-xs truncate\">\r\n                        {formatValue(setting.value, setting.type)}\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getTypeColor(setting.type)}`}>\r\n                      {setting.type}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {setting.category || 'General'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    {!bulkEditMode && (\r\n                      <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => setEditingSetting(setting)}\r\n                          className=\"text-blue-600 hover:text-blue-900\"\r\n                        >\r\n                          <Edit className=\"w-4 h-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteSetting(setting.key)}\r\n                          className=\"text-red-600 hover:text-red-900\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Create Setting Modal */}\r\n      {showCreateModal && (\r\n        <CreateSettingModal\r\n          onClose={() => setShowCreateModal(false)}\r\n          onSubmit={handleCreateSetting}\r\n          isLoading={createSettingMutation.isLoading}\r\n        />\r\n      )}\r\n\r\n      {/* Edit Setting Modal */}\r\n      {editingSetting && (\r\n        <EditSettingModal\r\n          setting={editingSetting}\r\n          onClose={() => setEditingSetting(null)}\r\n          onSubmit={(data) => handleUpdateSetting(editingSetting.key, data)}\r\n          isLoading={updateSettingMutation.isLoading}\r\n        />\r\n      )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Create Setting Modal Component\r\nconst CreateSettingModal: React.FC<{\r\n  onClose: () => void\r\n  onSubmit: (data: CreateSettingData) => void\r\n  isLoading: boolean\r\n}> = ({ onClose, onSubmit, isLoading }) => {\r\n  const [formData, setFormData] = useState<CreateSettingData>({\r\n    key: '',\r\n    value: '',\r\n    type: 'STRING',\r\n    category: 'GENERAL'\r\n  })\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    onSubmit(formData)\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Create New Setting</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"label\">Key</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.key}\r\n              onChange={(e) => setFormData({ ...formData, key: e.target.value })}\r\n              className=\"input\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"label\">Value</label>\r\n            <textarea\r\n              value={formData.value}\r\n              onChange={(e) => setFormData({ ...formData, value: e.target.value })}\r\n              className=\"input\"\r\n              rows={3}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"label\">Type</label>\r\n              <select\r\n                value={formData.type}\r\n                onChange={(e) => setFormData({ ...formData, type: e.target.value as any })}\r\n                className=\"input\"\r\n                required\r\n              >\r\n                <option value=\"STRING\">String</option>\r\n                <option value=\"NUMBER\">Number</option>\r\n                <option value=\"BOOLEAN\">Boolean</option>\r\n                <option value=\"JSON\">JSON</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"label\">Category</label>\r\n              <select\r\n                value={formData.category}\r\n                onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                className=\"input\"\r\n              >\r\n                <option value=\"GENERAL\">General</option>\r\n                <option value=\"SYSTEM\">System</option>\r\n                <option value=\"SECURITY\">Security</option>\r\n                <option value=\"NOTIFICATIONS\">Notifications</option>\r\n                <option value=\"PAYROLL\">Payroll</option>\r\n                <option value=\"ATTENDANCE\">Attendance</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button type=\"button\" onClick={onClose} className=\"btn btn-secondary\">\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\r\n              {isLoading ? 'Creating...' : 'Create Setting'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Edit Setting Modal Component\r\nconst EditSettingModal: React.FC<{\r\n  setting: SystemSetting\r\n  onClose: () => void\r\n  onSubmit: (data: Partial<CreateSettingData>) => void\r\n  isLoading: boolean\r\n}> = ({ setting, onClose, onSubmit, isLoading }) => {\r\n  const [formData, setFormData] = useState<Partial<CreateSettingData>>({\r\n    value: setting.value,\r\n    type: setting.type,\r\n    category: setting.category\r\n  })\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    onSubmit(formData)\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Edit Setting</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"label\">Key</label>\r\n            <input\r\n              type=\"text\"\r\n              value={setting.key}\r\n              className=\"input\"\r\n              disabled\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"label\">Value</label>\r\n            <textarea\r\n              value={formData.value}\r\n              onChange={(e) => setFormData({ ...formData, value: e.target.value })}\r\n              className=\"input\"\r\n              rows={3}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"label\">Type</label>\r\n              <select\r\n                value={formData.type}\r\n                onChange={(e) => setFormData({ ...formData, type: e.target.value as any })}\r\n                className=\"input\"\r\n                required\r\n              >\r\n                <option value=\"STRING\">String</option>\r\n                <option value=\"NUMBER\">Number</option>\r\n                <option value=\"BOOLEAN\">Boolean</option>\r\n                <option value=\"JSON\">JSON</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"label\">Category</label>\r\n              <select\r\n                value={formData.category}\r\n                onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                className=\"input\"\r\n              >\r\n                <option value=\"GENERAL\">General</option>\r\n                <option value=\"SYSTEM\">System</option>\r\n                <option value=\"SECURITY\">Security</option>\r\n                <option value=\"NOTIFICATIONS\">Notifications</option>\r\n                <option value=\"PAYROLL\">Payroll</option>\r\n                <option value=\"ATTENDANCE\">Attendance</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button type=\"button\" onClick={onClose} className=\"btn btn-secondary\">\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\r\n              {isLoading ? 'Updating...' : 'Update Setting'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SystemSettings\r\n\r\n"],"names":["settingsService","params","api","key","data","category","settings","PayrollSettings","setSettings","useState","methods","setMethods","isEditing","setIsEditing","queryClient","useQueryClient","settingsData","settingsLoading","useQuery","payrollSettingsService","methodsData","methodsLoading","updateSettingsMutation","useMutation","toast","error","_b","_a","useEffect","handleSave","handleReset","getMethodIcon","method","methodData","m","getMethodLabel","jsx","jsxs","Settings","Fragment","RefreshCw","Save","Calculator","e","Clock","DollarSign","Target","SystemSettings","activeTab","setActiveTab","showCreateModal","setShowCreateModal","editingSetting","setEditingSetting","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","bulkEditMode","setBulkEditMode","bulkSettings","setBulkSettings","systemConfig","createSettingMutation","updateSettingMutation","bulkUpdateMutation","deleteSettingMutation","handleCreateSetting","handleUpdateSetting","handleBulkUpdate","value","handleDeleteSetting","handleBulkEditChange","prev","getTypeColor","type","formatValue","Edit","Plus","setting","Trash2","CreateSettingModal","EditSettingModal","onClose","onSubmit","isLoading","formData","setFormData","handleSubmit"],"mappings":"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"}