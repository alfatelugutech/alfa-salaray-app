{"version":3,"file":"attendanceService-B_f8hz7J.js","sources":["../../src/services/attendanceService.ts"],"sourcesContent":["import api from './api'\nimport { Attendance, MarkAttendanceData, PaginatedResponse } from '../types'\n\nexport const attendanceService = {\n  // Mark attendance\n  async markAttendance(data: MarkAttendanceData): Promise<Attendance> {\n    const response = await api.post<{ success: boolean; data: { attendance: Attendance } }>('/attendance/mark', data)\n    return response.data.data.attendance\n  },\n\n  // Get attendance records\n  async getAttendance(params?: {\n    page?: number\n    limit?: number\n    employeeId?: string\n    startDate?: string\n    endDate?: string\n    status?: string\n  }): Promise<PaginatedResponse<Attendance>> {\n    const response = await api.get<PaginatedResponse<Attendance>>('/attendance', { params })\n    return response.data\n  },\n\n  // Get attendance by ID\n  async getAttendanceById(id: string): Promise<Attendance> {\n    const response = await api.get<{ success: boolean; data: { attendance: Attendance } }>(`/attendance/${id}`)\n    return response.data.data.attendance\n  },\n\n  // Update attendance\n  async updateAttendance(id: string, data: Partial<MarkAttendanceData>): Promise<Attendance> {\n    const response = await api.put<{ success: boolean; data: { attendance: Attendance } }>(`/attendance/${id}`, data)\n    return response.data.data.attendance\n  },\n\n  // Delete attendance\n  async deleteAttendance(id: string): Promise<void> {\n    await api.delete(`/attendance/${id}`)\n  },\n\n  // Get attendance statistics\n  async getAttendanceStats(params?: {\n    startDate?: string\n    endDate?: string\n  }): Promise<{\n    totalRecords: number\n    presentCount: number\n    absentCount: number\n    lateCount: number\n    attendanceRate: number\n  }> {\n    const response = await api.get<{ success: boolean; data: any }>('/attendance/stats/overview', { params })\n    return response.data.data\n  },\n\n  // Get employee attendance history\n  async getEmployeeAttendance(employeeId: string, params?: {\n    page?: number\n    limit?: number\n    startDate?: string\n    endDate?: string\n  }): Promise<PaginatedResponse<Attendance>> {\n    const response = await api.get<PaginatedResponse<Attendance>>(`/attendance/employee/${employeeId}`, { params })\n    return response.data\n  },\n\n  // Self check-in (employee marks own attendance)\n  async selfCheckIn(payload: {\n    isRemote?: boolean\n    notes?: string\n    checkInSelfie?: string\n    checkInLocation?: {\n      latitude?: number\n      longitude?: number\n      address?: string\n      accuracy?: number\n    } | null\n    deviceInfo?: any\n    shiftId?: string | null\n  }): Promise<Attendance> {\n    const response = await api.post<{ success: boolean; data: { attendance: Attendance } }>(\n      '/attendance/self/check-in',\n      payload\n    )\n    return response.data.data.attendance\n  },\n\n  // Self check-out\n  async selfCheckOut(payload: {\n    notes?: string\n    checkOutSelfie?: string\n    checkOutLocation?: {\n      latitude?: number\n      longitude?: number\n      address?: string\n      accuracy?: number\n    } | null\n  }): Promise<Attendance> {\n    const response = await api.post<{ success: boolean; data: { attendance: Attendance } }>(\n      '/attendance/self/check-out',\n      payload\n    )\n    return response.data.data.attendance\n  },\n\n  // Get current attendance status\n  async getAttendanceStatus(): Promise<{\n    status: {\n      canCheckIn: boolean\n      canCheckOut: boolean\n      isCompleted: boolean\n      currentTime: string\n      today: string\n    }\n    attendance: Attendance | null\n  }> {\n    const response = await api.get<{ success: boolean; data: any }>('/attendance/self/status')\n    return response.data.data\n  }\n}\n\n\n\n"],"names":["attendanceService","data","api","params","id","employeeId","payload"],"mappings":"wCAGO,MAAMA,EAAoB,CAE/B,MAAM,eAAeC,EAA+C,CAElE,OADiB,MAAMC,EAAI,KAA6D,mBAAoBD,CAAI,GAChG,KAAK,KAAK,UAC5B,EAGA,MAAM,cAAcE,EAOuB,CAEzC,OADiB,MAAMD,EAAI,IAAmC,cAAe,CAAE,OAAAC,EAAQ,GACvE,IAClB,EAGA,MAAM,kBAAkBC,EAAiC,CAEvD,OADiB,MAAMF,EAAI,IAA4D,eAAeE,CAAE,EAAE,GAC1F,KAAK,KAAK,UAC5B,EAGA,MAAM,iBAAiBA,EAAYH,EAAwD,CAEzF,OADiB,MAAMC,EAAI,IAA4D,eAAeE,CAAE,GAAIH,CAAI,GAChG,KAAK,KAAK,UAC5B,EAGA,MAAM,iBAAiBG,EAA2B,CAChD,MAAMF,EAAI,OAAO,eAAeE,CAAE,EAAE,CACtC,EAGA,MAAM,mBAAmBD,EAStB,CAED,OADiB,MAAMD,EAAI,IAAqC,6BAA8B,CAAE,OAAAC,EAAQ,GACxF,KAAK,IACvB,EAGA,MAAM,sBAAsBE,EAAoBF,EAKL,CAEzC,OADiB,MAAMD,EAAI,IAAmC,wBAAwBG,CAAU,GAAI,CAAE,OAAAF,EAAQ,GAC9F,IAClB,EAGA,MAAM,YAAYG,EAYM,CAKtB,OAJiB,MAAMJ,EAAI,KACzB,4BACAI,CAAA,GAEc,KAAK,KAAK,UAC5B,EAGA,MAAM,aAAaA,EASK,CAKtB,OAJiB,MAAMJ,EAAI,KACzB,6BACAI,CAAA,GAEc,KAAK,KAAK,UAC5B,EAGA,MAAM,qBASH,CAED,OADiB,MAAMJ,EAAI,IAAqC,yBAAyB,GACzE,KAAK,IACvB,CACF"}