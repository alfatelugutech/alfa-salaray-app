{"version":3,"file":"camera-DOUdOm2H.js","sources":["../../src/utils/geolocation.ts","../../src/utils/camera.ts"],"sourcesContent":["// Geolocation utility for Phase 2 attendance features\r\n\r\nexport interface LocationData {\r\n  latitude: number\r\n  longitude: number\r\n  accuracy: number\r\n  address?: string\r\n}\r\n\r\nexport interface DeviceInfo {\r\n  deviceType: string\r\n  os: string\r\n  browser: string\r\n  userAgent: string\r\n}\r\n\r\n/**\r\n * Get current GPS location from browser\r\n */\r\nexport const getCurrentLocation = (): Promise<LocationData> => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!navigator.geolocation) {\r\n      reject(new Error('Geolocation is not supported by your browser'))\r\n      return\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        resolve({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n          accuracy: position.coords.accuracy\r\n        })\r\n      },\r\n      (error) => {\r\n        let errorMessage = 'Unable to retrieve location'\r\n        switch (error.code) {\r\n          case error.PERMISSION_DENIED:\r\n            errorMessage = 'Location permission denied. Please enable location access.'\r\n            break\r\n          case error.POSITION_UNAVAILABLE:\r\n            errorMessage = 'Location information is unavailable.'\r\n            break\r\n          case error.TIMEOUT:\r\n            errorMessage = 'Location request timed out.'\r\n            break\r\n        }\r\n        reject(new Error(errorMessage))\r\n      },\r\n      {\r\n        enableHighAccuracy: true,\r\n        timeout: 10000,\r\n        maximumAge: 0\r\n      }\r\n    )\r\n  })\r\n}\r\n\r\n/**\r\n * Get address from coordinates using reverse geocoding\r\n */\r\nexport const getAddressFromCoordinates = async (\r\n  latitude: number,\r\n  longitude: number\r\n): Promise<string> => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1`,\r\n      {\r\n        headers: {\r\n          'User-Agent': 'Employee Attendance System'\r\n        }\r\n      }\r\n    )\r\n    const data = await response.json()\r\n    return data.display_name || `${latitude.toFixed(6)}, ${longitude.toFixed(6)}`\r\n  } catch (error) {\r\n    return `${latitude.toFixed(6)}, ${longitude.toFixed(6)}`\r\n  }\r\n}\r\n\r\n/**\r\n * Get complete location with address\r\n */\r\nexport const getCompleteLocation = async (): Promise<LocationData> => {\r\n  const location = await getCurrentLocation()\r\n  const address = await getAddressFromCoordinates(location.latitude, location.longitude)\r\n  return {\r\n    ...location,\r\n    address\r\n  }\r\n}\r\n\r\n/**\r\n * Detect device information\r\n */\r\nexport const getDeviceInfo = (): DeviceInfo => {\r\n  const userAgent = navigator.userAgent\r\n  \r\n  // Detect device type\r\n  let deviceType = 'desktop'\r\n  if (/mobile/i.test(userAgent)) {\r\n    deviceType = 'mobile'\r\n  } else if (/tablet|ipad/i.test(userAgent)) {\r\n    deviceType = 'tablet'\r\n  }\r\n\r\n  // Detect OS\r\n  let os = 'Unknown'\r\n  if (/windows/i.test(userAgent)) {\r\n    os = 'Windows'\r\n  } else if (/mac/i.test(userAgent)) {\r\n    os = 'macOS'\r\n  } else if (/linux/i.test(userAgent)) {\r\n    os = 'Linux'\r\n  } else if (/android/i.test(userAgent)) {\r\n    os = 'Android'\r\n  } else if (/ios|iphone|ipad/i.test(userAgent)) {\r\n    os = 'iOS'\r\n  }\r\n\r\n  // Detect browser\r\n  let browser = 'Unknown'\r\n  if (/edg/i.test(userAgent)) {\r\n    browser = 'Edge'\r\n  } else if (/chrome/i.test(userAgent) && !/edg/i.test(userAgent)) {\r\n    browser = 'Chrome'\r\n  } else if (/firefox/i.test(userAgent)) {\r\n    browser = 'Firefox'\r\n  } else if (/safari/i.test(userAgent) && !/chrome/i.test(userAgent)) {\r\n    browser = 'Safari'\r\n  }\r\n\r\n  return {\r\n    deviceType,\r\n    os,\r\n    browser,\r\n    userAgent\r\n  }\r\n}\r\n\r\n/**\r\n * Check if geolocation is available\r\n */\r\nexport const isGeolocationAvailable = (): boolean => {\r\n  return 'geolocation' in navigator\r\n}\r\n\r\n/**\r\n * Format coordinates for display\r\n */\r\nexport const formatCoordinates = (latitude: number, longitude: number): string => {\r\n  return `${latitude.toFixed(6)}°, ${longitude.toFixed(6)}°`\r\n}\r\n\r\n/**\r\n * Generate Google Maps URL\r\n */\r\nexport const getGoogleMapsUrl = (latitude: number, longitude: number): string => {\r\n  return `https://www.google.com/maps?q=${latitude},${longitude}`\r\n}\r\n\r\n","// Camera utility for selfie attendance feature\r\n\r\n/**\r\n * Check if camera is available\r\n */\r\nexport const isCameraAvailable = (): boolean => {\r\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)\r\n}\r\n\r\n/**\r\n * Check camera permissions and provide user guidance\r\n */\r\nexport const checkCameraPermissions = async (): Promise<{ hasPermission: boolean; message: string }> => {\r\n  try {\r\n    if (!isCameraAvailable()) {\r\n      return {\r\n        hasPermission: false,\r\n        message: 'Camera is not available on this device. Please use a device with a camera.'\r\n      }\r\n    }\r\n\r\n    // Try to get camera access to check permissions\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true })\r\n    \r\n    // Stop the stream immediately as we were just checking permissions\r\n    stream.getTracks().forEach(track => track.stop())\r\n    \r\n    return {\r\n      hasPermission: true,\r\n      message: 'Camera access granted successfully!'\r\n    }\r\n  } catch (error: any) {\r\n    console.error('❌ Camera permission check failed:', error)\r\n    \r\n    let message = 'Camera access failed'\r\n    \r\n    if (error.name === 'NotAllowedError') {\r\n      message = 'Camera permission denied. Please click \"Allow\" when prompted for camera access.'\r\n    } else if (error.name === 'NotFoundError') {\r\n      message = 'No camera found. Please check if your device has a camera.'\r\n    } else if (error.name === 'NotReadableError') {\r\n      message = 'Camera is being used by another app. Please close other camera applications.'\r\n    } else {\r\n      message = `Camera error: ${error.message || 'Unknown error'}`\r\n    }\r\n    \r\n    return {\r\n      hasPermission: false,\r\n      message\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Capture photo from camera\r\n */\r\nexport const captureSelfie = async (): Promise<string> => {\r\n  return new Promise(async (resolve, reject) => {\r\n    if (!isCameraAvailable()) {\r\n      reject(new Error('Camera is not available on this device'))\r\n      return\r\n    }\r\n\r\n    let stream: MediaStream | null = null\r\n    \r\n    try {\r\n      // Try with strict constraints first\r\n      try {\r\n        stream = await navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            facingMode: 'user', // Front camera (selfie mode)\r\n            width: { ideal: 600, min: 300 },\r\n            height: { ideal: 600, min: 300 }\r\n          }\r\n        })\r\n      } catch (strictError) {\r\n        console.log('⚠️ Strict constraints failed, trying relaxed constraints:', strictError)\r\n        \r\n        // Fallback to relaxed constraints\r\n        try {\r\n          stream = await navigator.mediaDevices.getUserMedia({\r\n            video: {\r\n              facingMode: 'user'\r\n            }\r\n          })\r\n        } catch (relaxedError) {\r\n          console.log('⚠️ Relaxed constraints failed, trying basic video:', relaxedError)\r\n          \r\n          // Final fallback to basic video\r\n          stream = await navigator.mediaDevices.getUserMedia({\r\n            video: true\r\n          })\r\n        }\r\n      }\r\n\r\n      // Create video element\r\n      const video = document.createElement('video')\r\n      video.srcObject = stream\r\n      video.autoplay = true\r\n      await video.play()\r\n\r\n      // Wait for video to be ready\r\n      await new Promise(resolve => setTimeout(resolve, 500))\r\n\r\n      // Create canvas for capture with passport size (600x600)\r\n      const canvas = document.createElement('canvas')\r\n      canvas.width = 600\r\n      canvas.height = 600\r\n      \r\n      // Draw video frame to canvas\r\n      const context = canvas.getContext('2d')\r\n      if (context) {\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height)\r\n      }\r\n\r\n      // Stop camera\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop())\r\n      }\r\n\r\n      // Convert to base64\r\n      const imageData = canvas.toDataURL('image/jpeg', 0.8)\r\n      \r\n      resolve(imageData)\r\n    } catch (error: any) {\r\n      // Clean up stream if it exists\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop())\r\n      }\r\n      \r\n      console.error('❌ Camera capture error:', error)\r\n      \r\n      let errorMessage = 'Failed to capture photo'\r\n      \r\n      if (error.name === 'NotAllowedError') {\r\n        errorMessage = 'Camera permission denied. Please allow camera access and try again.'\r\n      } else if (error.name === 'NotFoundError') {\r\n        errorMessage = 'No camera found on this device. Please check your camera connection.'\r\n      } else if (error.name === 'NotReadableError') {\r\n        errorMessage = 'Camera is already in use by another application. Please close other camera apps and try again.'\r\n      } else if (error.name === 'OverconstrainedError') {\r\n        errorMessage = 'Camera constraints not supported. Please try again.'\r\n      } else if (error.name === 'AbortError') {\r\n        errorMessage = 'Camera access was interrupted. Please try again.'\r\n      } else {\r\n        errorMessage = `Camera error: ${error.message || 'Unknown error'}`\r\n      }\r\n      \r\n      reject(new Error(errorMessage))\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Select and read image from file input\r\n */\r\nexport const selectImageFile = async (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!file.type.startsWith('image/')) {\r\n      reject(new Error('Please select a valid image file'))\r\n      return\r\n    }\r\n\r\n    // Check file size (max 5MB)\r\n    const maxSize = 5 * 1024 * 1024\r\n    if (file.size > maxSize) {\r\n      reject(new Error('Image size must be less than 5MB'))\r\n      return\r\n    }\r\n\r\n    const reader = new FileReader()\r\n    \r\n    reader.onload = (e) => {\r\n      const result = e.target?.result as string\r\n      resolve(result)\r\n    }\r\n    \r\n    reader.onerror = () => {\r\n      reject(new Error('Failed to read image file'))\r\n    }\r\n    \r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\n\r\n/**\r\n * Compress image to passport size (600x600) with optimal quality\r\n */\r\nexport const compressImage = async (dataUrl: string): Promise<string> => {\r\n  return new Promise((resolve) => {\r\n    const img = new Image()\r\n    \r\n    img.onload = () => {\r\n      const canvas = document.createElement('canvas')\r\n      \r\n      // Set canvas to passport size (600x600)\r\n      canvas.width = 600\r\n      canvas.height = 600\r\n\r\n      const ctx = canvas.getContext('2d')\r\n      if (ctx) {\r\n        // Draw image centered and scaled to fit passport size\r\n        ctx.drawImage(img, 0, 0, 600, 600)\r\n      }\r\n\r\n      // Compress with high quality for passport size\r\n      const compressed = canvas.toDataURL('image/jpeg', 0.9)\r\n      resolve(compressed)\r\n    }\r\n\r\n    img.src = dataUrl\r\n  })\r\n}\r\n\r\n/**\r\n * Get thumbnail from image\r\n */\r\nexport const getImageThumbnail = async (dataUrl: string): Promise<string> => {\r\n  return compressImage(dataUrl)\r\n}\r\n\r\n"],"names":["getCurrentLocation","resolve","reject","position","error","errorMessage","getAddressFromCoordinates","latitude","longitude","getCompleteLocation","location","address","getDeviceInfo","userAgent","deviceType","os","browser","isCameraAvailable","checkCameraPermissions","track","message","captureSelfie","stream","strictError","relaxedError","video","canvas","context","imageData","selectImageFile","file","maxSize","reader","e","_a","result","compressImage","dataUrl","img","ctx","compressed","getImageThumbnail"],"mappings":"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"}