{"version":3,"file":"AttendanceCalendar-BWm0rEvZ.js","sources":["../../src/pages/AttendanceCalendar.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { Calendar, Clock, User, CheckCircle, XCircle, AlertCircle, Home } from 'lucide-react'\nimport { attendanceService } from '../services/attendanceService'\nimport { employeeService } from '../services/employeeService'\nimport toast from 'react-hot-toast'\nimport { getCompleteLocation, getDeviceInfo } from '../utils/geolocation'\nimport { captureSelfie, compressImage } from '../utils/camera'\n\nconst AttendanceCalendar: React.FC = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date())\n  const [selectedEmployee, setSelectedEmployee] = useState<string>('')\n  const [showMarkModal, setShowMarkModal] = useState(false)\n  const [markFormData, setMarkFormData] = useState({\n    checkIn: '',\n    checkOut: '',\n    status: 'PRESENT',\n    notes: '',\n    isRemote: false\n  })\n  const [selfie, setSelfie] = useState<string | null>(null)\n  const [location, setLocation] = useState<any>(null)\n  const [isCapturing, setIsCapturing] = useState(false)\n  const queryClient = useQueryClient()\n\n  // Fetch employees\n  const { data: employeesData } = useQuery(\n    'employees',\n    () => employeeService.getEmployees({ page: 1, limit: 1000 })\n  )\n\n  // Fetch attendance for selected date\n  const { data: attendanceData, isLoading } = useQuery(\n    ['attendance-calendar', selectedDate.toISOString().split('T')[0]],\n    () => attendanceService.getAttendance({\n      startDate: selectedDate.toISOString().split('T')[0],\n      endDate: selectedDate.toISOString().split('T')[0]\n    })\n  )\n\n  // Mark attendance mutation\n  const markAttendanceMutation = useMutation(attendanceService.markAttendance, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('attendance-calendar')\n      toast.success('Attendance marked successfully!')\n      setShowMarkModal(false)\n      setSelfie(null)\n      setLocation(null)\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.error || 'Failed to mark attendance')\n    }\n  })\n\n  // Handle date change\n  const handleDateChange = (date: Date) => {\n    setSelectedDate(date)\n  }\n\n  // Handle employee selection\n  const handleEmployeeSelect = (employeeId: string) => {\n    setSelectedEmployee(employeeId)\n    setShowMarkModal(true)\n  }\n\n  // Handle selfie capture\n  const handleCaptureSelfie = async () => {\n    setIsCapturing(true)\n    try {\n      const photo = await captureSelfie()\n      const compressed = await compressImage(photo)\n      setSelfie(compressed)\n      toast.success('📸 Selfie captured successfully!')\n    } catch (error: any) {\n      toast.error(error.message || 'Failed to capture selfie')\n    } finally {\n      setIsCapturing(false)\n    }\n  }\n\n  // Handle location capture\n  const handleCaptureLocation = async () => {\n    try {\n      const loc = await getCompleteLocation()\n      setLocation(loc)\n      toast.success('📍 Location captured successfully!')\n    } catch (error: any) {\n      toast.error(error.message || 'Failed to get location')\n    }\n  }\n\n  // Handle form submission\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!selectedEmployee) {\n      toast.error('Please select an employee')\n      return\n    }\n\n    const attendanceData = {\n      employeeId: selectedEmployee,\n      date: selectedDate.toISOString().split('T')[0],\n      checkIn: markFormData.checkIn || undefined,\n      checkOut: markFormData.checkOut || undefined,\n      status: markFormData.status as any,\n      notes: markFormData.notes || undefined,\n      isRemote: markFormData.isRemote,\n      checkInSelfie: selfie || undefined,\n      checkInLocation: location || undefined,\n      deviceInfo: getDeviceInfo() || undefined\n    }\n\n    markAttendanceMutation.mutate(attendanceData)\n  }\n\n  // Get attendance status for employee on selected date\n  const getEmployeeAttendanceStatus = (employeeId: string) => {\n    const attendance = attendanceData?.data?.attendances?.find(\n      (att: any) => att.employeeId === employeeId && \n      new Date(att.date).toDateString() === selectedDate.toDateString()\n    )\n    return attendance\n  }\n\n  // Get status color\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'PRESENT': return 'bg-green-100 text-green-800 border-green-200'\n      case 'LATE': return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'ABSENT': return 'bg-red-100 text-red-800 border-red-200'\n      case 'HALF_DAY': return 'bg-blue-100 text-blue-800 border-blue-200'\n      case 'EARLY_LEAVE': return 'bg-orange-100 text-orange-800 border-orange-200'\n      default: return 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n  }\n\n  // Get status icon\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'PRESENT': return <CheckCircle className=\"w-4 h-4\" />\n      case 'LATE': return <Clock className=\"w-4 h-4\" />\n      case 'ABSENT': return <XCircle className=\"w-4 h-4\" />\n      case 'HALF_DAY': return <AlertCircle className=\"w-4 h-4\" />\n      case 'EARLY_LEAVE': return <Home className=\"w-4 h-4\" />\n      default: return <Clock className=\"w-4 h-4\" />\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Attendance Calendar</h1>\n          <p className=\"text-gray-600\">Mark attendance for any employee on any date</p>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-sm text-gray-600\">\n            Selected: {selectedDate.toLocaleDateString('en-US', { \n              weekday: 'long', \n              year: 'numeric', \n              month: 'long', \n              day: 'numeric' \n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Calendar and Employee Selection */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Date Picker */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n            <Calendar className=\"w-5 h-5\" />\n            Select Date\n          </h3>\n          <input\n            type=\"date\"\n            value={selectedDate.toISOString().split('T')[0]}\n            onChange={(e) => handleDateChange(new Date(e.target.value))}\n            className=\"w-full input\"\n          />\n        </div>\n\n        {/* Employee Selection */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n            <User className=\"w-5 h-5\" />\n            Select Employee\n          </h3>\n          <select\n            value={selectedEmployee}\n            onChange={(e) => setSelectedEmployee(e.target.value)}\n            className=\"w-full input\"\n          >\n            <option value=\"\">Choose an employee...</option>\n            {employeesData?.data?.employees?.map((employee: any) => (\n              <option key={employee.id} value={employee.id}>\n                {employee.user.firstName} {employee.user.lastName} - {employee.employeeId}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Quick Actions */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n          <div className=\"space-y-2\">\n            <button\n              onClick={() => setSelectedDate(new Date())}\n              className=\"w-full btn btn-outline btn-sm\"\n            >\n              Today\n            </button>\n            <button\n              onClick={() => setSelectedDate(new Date(Date.now() - 24 * 60 * 60 * 1000))}\n              className=\"w-full btn btn-outline btn-sm\"\n            >\n              Yesterday\n            </button>\n            <button\n              onClick={() => setSelectedDate(new Date(Date.now() + 24 * 60 * 60 * 1000))}\n              className=\"w-full btn btn-outline btn-sm\"\n            >\n              Tomorrow\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Employee Attendance Status */}\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            Employee Attendance Status - {selectedDate.toLocaleDateString()}\n          </h3>\n        </div>\n        <div className=\"p-6\">\n          {isLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n              <p className=\"text-gray-600 mt-2\">Loading attendance data...</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {employeesData?.data?.employees?.map((employee: any) => {\n                const attendance = getEmployeeAttendanceStatus(employee.id)\n                return (\n                  <div\n                    key={employee.id}\n                    className={`p-4 rounded-lg border-2 cursor-pointer transition-all hover:shadow-md ${\n                      attendance \n                        ? getStatusColor(attendance.status)\n                        : 'bg-gray-50 border-gray-200 hover:border-gray-300'\n                    }`}\n                    onClick={() => handleEmployeeSelect(employee.id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">\n                          {employee.user.firstName} {employee.user.lastName}\n                        </h4>\n                        <p className=\"text-sm text-gray-600\">{employee.employeeId}</p>\n                        <p className=\"text-xs text-gray-500\">{employee.department}</p>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        {attendance ? (\n                          <>\n                            {getStatusIcon(attendance.status)}\n                            <span className=\"text-sm font-medium\">\n                              {attendance.status.replace('_', ' ')}\n                            </span>\n                          </>\n                        ) : (\n                          <div className=\"text-gray-400\">\n                            <XCircle className=\"w-5 h-5\" />\n                            <span className=\"text-xs\">Not Marked</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {attendance && (\n                      <div className=\"mt-2 text-xs text-gray-600\">\n                        {attendance.checkIn && (\n                          <div>In: {new Date(attendance.checkIn).toLocaleTimeString()}</div>\n                        )}\n                        {attendance.checkOut && (\n                          <div>Out: {new Date(attendance.checkOut).toLocaleTimeString()}</div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Mark Attendance Modal */}\n      {showMarkModal && selectedEmployee && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n              <div>\n                <h2 className=\"text-2xl font-bold text-gray-900\">Mark Attendance</h2>\n                <p className=\"text-gray-600\">\n                  {employeesData?.data?.employees?.find((emp: any) => emp.id === selectedEmployee)?.user?.firstName} {' '}\n                  {employeesData?.data?.employees?.find((emp: any) => emp.id === selectedEmployee)?.user?.lastName} - {' '}\n                  {selectedDate.toLocaleDateString()}\n                </p>\n              </div>\n              <button\n                onClick={() => setShowMarkModal(false)}\n                className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Check-in Time */}\n                <div>\n                  <label className=\"label\">Check-in Time</label>\n                  <input\n                    type=\"datetime-local\"\n                    className=\"input\"\n                    value={markFormData.checkIn}\n                    onChange={(e) => setMarkFormData({...markFormData, checkIn: e.target.value})}\n                  />\n                </div>\n\n                {/* Check-out Time */}\n                <div>\n                  <label className=\"label\">Check-out Time</label>\n                  <input\n                    type=\"datetime-local\"\n                    className=\"input\"\n                    value={markFormData.checkOut}\n                    onChange={(e) => setMarkFormData({...markFormData, checkOut: e.target.value})}\n                  />\n                </div>\n\n                {/* Status */}\n                <div>\n                  <label className=\"label\">Status</label>\n                  <select\n                    className=\"input\"\n                    value={markFormData.status}\n                    onChange={(e) => setMarkFormData({...markFormData, status: e.target.value})}\n                    required\n                  >\n                    <option value=\"PRESENT\">Present</option>\n                    <option value=\"LATE\">Late</option>\n                    <option value=\"ABSENT\">Absent</option>\n                    <option value=\"HALF_DAY\">Half Day</option>\n                    <option value=\"EARLY_LEAVE\">Early Leave</option>\n                  </select>\n                </div>\n\n                {/* Remote Work */}\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"isRemote\"\n                    checked={markFormData.isRemote}\n                    onChange={(e) => setMarkFormData({...markFormData, isRemote: e.target.checked})}\n                    className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"isRemote\" className=\"ml-2 text-sm text-gray-700\">\n                    🏠 Remote Work\n                  </label>\n                </div>\n              </div>\n\n              {/* Notes */}\n              <div>\n                <label className=\"label\">Notes</label>\n                <textarea\n                  className=\"input\"\n                  rows={3}\n                  value={markFormData.notes}\n                  onChange={(e) => setMarkFormData({...markFormData, notes: e.target.value})}\n                  placeholder=\"Additional notes...\"\n                />\n              </div>\n\n              {/* Selfie and Location Capture */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"label\">Selfie (Optional)</label>\n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleCaptureSelfie}\n                      disabled={isCapturing}\n                      className=\"btn btn-outline btn-sm\"\n                    >\n                      {isCapturing ? 'Capturing...' : '📸 Capture Selfie'}\n                    </button>\n                    {selfie && (\n                      <div className=\"text-green-600 text-sm\">✓ Captured</div>\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"label\">Location (Optional)</label>\n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleCaptureLocation}\n                      className=\"btn btn-outline btn-sm\"\n                    >\n                      📍 Capture Location\n                    </button>\n                    {location && (\n                      <div className=\"text-green-600 text-sm\">✓ Captured</div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Footer */}\n              <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowMarkModal(false)}\n                  className=\"btn btn-outline btn-md\"\n                  disabled={markAttendanceMutation.isLoading}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-md\"\n                  disabled={markAttendanceMutation.isLoading}\n                >\n                  {markAttendanceMutation.isLoading ? 'Marking...' : 'Mark Attendance'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default AttendanceCalendar\n"],"names":["AttendanceCalendar","selectedDate","setSelectedDate","useState","selectedEmployee","setSelectedEmployee","showMarkModal","setShowMarkModal","markFormData","setMarkFormData","selfie","setSelfie","location","setLocation","isCapturing","setIsCapturing","queryClient","useQueryClient","employeesData","useQuery","employeeService","attendanceData","isLoading","attendanceService","markAttendanceMutation","useMutation","toast","error","_b","_a","handleDateChange","date","handleEmployeeSelect","employeeId","handleCaptureSelfie","photo","captureSelfie","compressed","compressImage","handleCaptureLocation","loc","getCompleteLocation","handleSubmit","e","getDeviceInfo","getEmployeeAttendanceStatus","att","getStatusColor","status","getStatusIcon","jsx","CheckCircle","Clock","XCircle","AlertCircle","Home","jsxs","Calendar","User","employee","attendance","Fragment","_h","_g","_f","_e","emp","_l","_k","_j","_i"],"mappings":"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"}