import{b as t}from"./index-mRQHkU_F.js";const o={async getPayrolls(a){return(await t.get("/payroll",{params:a})).data},async getPayroll(a){return(await t.get(`/payroll/${a}`)).data.data.payroll},async createPayroll(a){return(await t.post("/payroll",a)).data.data.payroll},async updatePayroll(a,e){return(await t.put(`/payroll/${a}`,e)).data.data.payroll},async markPayrollAsPaid(a){return(await t.put(`/payroll/${a}/mark-paid`)).data.data.payroll},async deletePayroll(a){await t.delete(`/payroll/${a}`)},async getPayrollStats(a){return(await t.get("/payroll/stats/overview",{params:a})).data.data},async getEmployeePayrollHistory(a,e){return(await t.get(`/payroll/employee/${a}`,{params:e})).data},async processPayment(a,e){return(await t.put(`/payroll/${a}/process-payment`,e)).data.data.payroll},async bulkPayment(a){return(await t.post("/payroll/bulk-payment",a)).data.data},async getPaymentHistory(a,e){return(await t.get(`/payroll/employee/${a}/payment-history`,{params:e})).data},async getPaymentStats(a){return(await t.get("/payroll/payment-stats",{params:a})).data.data}};export{o as p};
//# sourceMappingURL=payrollService-BrrfXl4S.js.map
