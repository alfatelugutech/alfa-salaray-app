{"version":3,"file":"RoleManagement-AkQIAaMu.js","sources":["../../src/services/roleService.ts","../../src/services/permissionService.ts","../../src/pages/RoleManagement.tsx"],"sourcesContent":["import api from './api'\r\nimport { Role, UserRole } from '../types'\r\n\r\nexport interface CreateRoleData {\r\n  name: string\r\n  description?: string\r\n  permissions?: string[]\r\n}\r\n\r\nexport interface UpdateRoleData {\r\n  name?: string\r\n  description?: string\r\n  isActive?: boolean\r\n  permissions?: string[]\r\n}\r\n\r\nexport interface AssignRoleData {\r\n  userId: string\r\n  roleId: string\r\n}\r\n\r\nconst roleService = {\r\n  // Get all roles\r\n  async getRoles(): Promise<Role[]> {\r\n    const response = await api.get('/roles')\r\n    return response.data.data\r\n  },\r\n\r\n  // Get role by ID\r\n  async getRole(id: string): Promise<Role> {\r\n    const response = await api.get(`/roles/${id}`)\r\n    return response.data.data\r\n  },\r\n\r\n  // Create new role\r\n  async createRole(data: CreateRoleData): Promise<Role> {\r\n    const response = await api.post('/roles', data)\r\n    return response.data.data\r\n  },\r\n\r\n  // Update role\r\n  async updateRole(id: string, data: UpdateRoleData): Promise<Role> {\r\n    const response = await api.put(`/roles/${id}`, data)\r\n    return response.data.data\r\n  },\r\n\r\n  // Delete role\r\n  async deleteRole(id: string): Promise<void> {\r\n    await api.delete(`/roles/${id}`)\r\n  },\r\n\r\n  // Assign role to user\r\n  async assignRole(data: AssignRoleData): Promise<UserRole> {\r\n    const response = await api.post('/roles/assign', data)\r\n    return response.data.data\r\n  },\r\n\r\n  // Remove role from user\r\n  async unassignRole(userId: string, roleId: string): Promise<void> {\r\n    await api.delete(`/roles/unassign/${userId}/${roleId}`)\r\n  }\r\n}\r\n\r\nexport default roleService\r\n\r\n","import api from './api'\r\nimport { Permission } from '../types'\r\n\r\nexport interface CreatePermissionData {\r\n  name: string\r\n  description?: string\r\n  category: string\r\n  action: string\r\n  resource: string\r\n}\r\n\r\nexport interface UpdatePermissionData {\r\n  name?: string\r\n  description?: string\r\n  category?: string\r\n  action?: string\r\n  resource?: string\r\n  isActive?: boolean\r\n}\r\n\r\nconst permissionService = {\r\n  // Get all permissions\r\n  async getPermissions(): Promise<{ data: Permission[]; grouped: Record<string, Permission[]> }> {\r\n    const response = await api.get('/permissions')\r\n    return response.data\r\n  },\r\n\r\n  // Get permissions by category\r\n  async getPermissionsByCategory(category: string): Promise<Permission[]> {\r\n    const response = await api.get(`/permissions/category/${category}`)\r\n    return response.data.data\r\n  },\r\n\r\n  // Get permission by ID\r\n  async getPermission(id: string): Promise<Permission> {\r\n    const response = await api.get(`/permissions/${id}`)\r\n    return response.data.data\r\n  },\r\n\r\n  // Create new permission\r\n  async createPermission(data: CreatePermissionData): Promise<Permission> {\r\n    const response = await api.post('/permissions', data)\r\n    return response.data.data\r\n  },\r\n\r\n  // Update permission\r\n  async updatePermission(id: string, data: UpdatePermissionData): Promise<Permission> {\r\n    const response = await api.put(`/permissions/${id}`, data)\r\n    return response.data.data\r\n  },\r\n\r\n  // Delete permission\r\n  async deletePermission(id: string): Promise<void> {\r\n    await api.delete(`/permissions/${id}`)\r\n  },\r\n\r\n  // Initialize default permissions\r\n  async initializePermissions(): Promise<{ created: number; total: number }> {\r\n    const response = await api.post('/permissions/initialize')\r\n    return response.data.data\r\n  }\r\n}\r\n\r\nexport default permissionService\r\n\r\n","import React, { useState } from 'react'\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\r\nimport { Plus, Edit, Trash2, Users, Shield, Key, UserCheck } from 'lucide-react'\r\nimport roleService from '../services/roleService'\r\nimport permissionService from '../services/permissionService'\r\nimport { employeeService } from '../services/employeeService'\r\nimport { Role, Permission, Employee } from '../types'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst RoleManagement: React.FC = () => {\r\n  const [showCreateModal, setShowCreateModal] = useState(false)\r\n  const [editingRole, setEditingRole] = useState<Role | null>(null)\r\n  const [showAssignModal, setShowAssignModal] = useState(false)\r\n  const [selectedRole, setSelectedRole] = useState<Role | null>(null)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const queryClient = useQueryClient()\r\n\r\n  // Fetch roles\r\n  const { data: roles, isLoading } = useQuery(\r\n    'roles',\r\n    roleService.getRoles\r\n  )\r\n\r\n  // Fetch permissions\r\n  const { data: permissionsData } = useQuery(\r\n    'permissions',\r\n    permissionService.getPermissions\r\n  )\r\n\r\n  // Fetch employees for assignment\r\n  const { data: employeesData } = useQuery(\r\n    'employees',\r\n    () => employeeService.getEmployees({ page: 1, limit: 1000 })\r\n  )\r\n\r\n  // Create role mutation\r\n  const createRoleMutation = useMutation(\r\n    (data: any) => roleService.createRole(data),\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: ['roles'] })\r\n        setShowCreateModal(false)\r\n        toast.success('Role created successfully')\r\n      },\r\n      onError: (error: any) => {\r\n        toast.error(error.response?.data?.error || 'Failed to create role')\r\n      }\r\n    }\r\n  )\r\n\r\n  // Update role mutation\r\n  const updateRoleMutation = useMutation(\r\n    ({ id, data }: { id: string; data: any }) => roleService.updateRole(id, data),\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: ['roles'] })\r\n        setEditingRole(null)\r\n        toast.success('Role updated successfully')\r\n      },\r\n      onError: (error: any) => {\r\n        toast.error(error.response?.data?.error || 'Failed to update role')\r\n      }\r\n    }\r\n  )\r\n\r\n  // Delete role mutation\r\n  const deleteRoleMutation = useMutation(\r\n    (id: string) => roleService.deleteRole(id),\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: ['roles'] })\r\n        toast.success('Role deleted successfully')\r\n      },\r\n      onError: (error: any) => {\r\n        toast.error(error.response?.data?.error || 'Failed to delete role')\r\n      }\r\n    }\r\n  )\r\n\r\n  // Assign role mutation\r\n  const assignRoleMutation = useMutation(\r\n    (data: any) => roleService.assignRole(data),\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries({ queryKey: ['roles'] })\r\n        setShowAssignModal(false)\r\n        toast.success('Role assigned successfully')\r\n      },\r\n      onError: (error: any) => {\r\n        toast.error(error.response?.data?.error || 'Failed to assign role')\r\n      }\r\n    }\r\n  )\r\n\r\n  const handleCreateRole = (data: any) => {\r\n    createRoleMutation.mutate(data)\r\n  }\r\n\r\n  const handleUpdateRole = (data: any) => {\r\n    if (editingRole) {\r\n      updateRoleMutation.mutate({ id: editingRole.id, data })\r\n    }\r\n  }\r\n\r\n  const handleDeleteRole = (id: string) => {\r\n    if (window.confirm('Are you sure you want to delete this role?')) {\r\n      deleteRoleMutation.mutate(id)\r\n    }\r\n  }\r\n\r\n  const handleAssignRole = (data: any) => {\r\n    assignRoleMutation.mutate(data)\r\n  }\r\n\r\n  const filteredRoles = (roles || []).filter((role: Role) =>\r\n    role.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    role.description?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Role Management</h1>\r\n          <p className=\"text-gray-600\">Create and manage custom roles with specific permissions</p>\r\n        </div>\r\n        <div className=\"flex gap-3 mt-4 sm:mt-0\">\r\n          <button\r\n            onClick={() => setShowCreateModal(true)}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <Plus className=\"w-4 h-4 mr-2\" />\r\n            Create Role\r\n          </button>\r\n          <button\r\n            onClick={() => setShowAssignModal(true)}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            <UserCheck className=\"w-4 h-4 mr-2\" />\r\n            Assign Role\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search roles...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"input\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Roles List */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border\">\r\n        {isLoading ? (\r\n          <div className=\"p-8 text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n            <p className=\"text-gray-600 mt-2\">Loading roles...</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Role\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Permissions\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Users\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredRoles.map((role) => (\r\n                  <tr key={role.id}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"p-2 bg-blue-100 rounded-lg mr-3\">\r\n                          <Shield className=\"w-5 h-5 text-blue-600\" />\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900\">\r\n                            {role.name}\r\n                            {role.isSystem && (\r\n                              <span className=\"ml-2 px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full\">\r\n                                System\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                          {role.description && (\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {role.description}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <Key className=\"w-4 h-4 text-gray-400 mr-2\" />\r\n                        <span className=\"text-sm text-gray-900\">\r\n                          {role.permissions?.length || 0} permissions\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <Users className=\"w-4 h-4 text-gray-400 mr-2\" />\r\n                        <span className=\"text-sm text-gray-900\">\r\n                          {role._count?.users || 0} users\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                        role.isActive \r\n                          ? 'bg-green-100 text-green-800' \r\n                          : 'bg-red-100 text-red-800'\r\n                      }`}>\r\n                        {role.isActive ? 'Active' : 'Inactive'}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => setEditingRole(role)}\r\n                          className=\"text-blue-600 hover:text-blue-900\"\r\n                          disabled={role.isSystem}\r\n                        >\r\n                          <Edit className=\"w-4 h-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            setSelectedRole(role)\r\n                            setShowAssignModal(true)\r\n                          }}\r\n                          className=\"text-green-600 hover:text-green-900\"\r\n                        >\r\n                          <UserCheck className=\"w-4 h-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDeleteRole(role.id)}\r\n                          className=\"text-red-600 hover:text-red-900\"\r\n                          disabled={role.isSystem}\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Create Role Modal */}\r\n      {showCreateModal && (\r\n        <CreateRoleModal\r\n          permissions={(permissionsData as any)?.data || []}\r\n          onClose={() => setShowCreateModal(false)}\r\n          onSubmit={handleCreateRole}\r\n          isLoading={createRoleMutation.isLoading}\r\n        />\r\n      )}\r\n\r\n      {/* Edit Role Modal */}\r\n      {editingRole && (\r\n        <EditRoleModal\r\n          role={editingRole}\r\n          permissions={(permissionsData as any)?.data || []}\r\n          onClose={() => setEditingRole(null)}\r\n          onSubmit={handleUpdateRole}\r\n          isLoading={updateRoleMutation.isLoading}\r\n        />\r\n      )}\r\n\r\n      {/* Assign Role Modal */}\r\n      {showAssignModal && (\r\n        <AssignRoleModal\r\n          role={selectedRole}\r\n          employees={employeesData?.data?.employees || []}\r\n          onClose={() => {\r\n            setShowAssignModal(false)\r\n            setSelectedRole(null)\r\n          }}\r\n          onSubmit={handleAssignRole}\r\n          isLoading={assignRoleMutation.isLoading}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Create Role Modal Component\r\nconst CreateRoleModal: React.FC<{\r\n  permissions: Permission[]\r\n  onClose: () => void\r\n  onSubmit: (data: any) => void\r\n  isLoading: boolean\r\n}> = ({ permissions, onClose, onSubmit, isLoading }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    permissions: [] as string[]\r\n  })\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    onSubmit(formData)\r\n  }\r\n\r\n  const togglePermission = (permissionId: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: prev.permissions.includes(permissionId)\r\n        ? prev.permissions.filter(id => id !== permissionId)\r\n        : [...prev.permissions, permissionId]\r\n    }))\r\n  }\r\n\r\n  // Group permissions by category\r\n  const groupedPermissions = permissions.reduce((acc, permission) => {\r\n    if (!acc[permission.category]) {\r\n      acc[permission.category] = []\r\n    }\r\n    acc[permission.category].push(permission)\r\n    return acc\r\n  }, {} as Record<string, Permission[]>)\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Create Role</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"label\">Role Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n              className=\"input\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"label\">Description</label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              className=\"input\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"label\">Permissions</label>\r\n            <div className=\"max-h-64 overflow-y-auto border rounded-lg p-4\">\r\n              {Object.entries(groupedPermissions).map(([category, categoryPermissions]) => (\r\n                <div key={category} className=\"mb-4\">\r\n                  <h4 className=\"font-medium text-gray-900 mb-2 capitalize\">{category}</h4>\r\n                  <div className=\"space-y-2\">\r\n                    {categoryPermissions.map((permission) => (\r\n                      <label key={permission.id} className=\"flex items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={formData.permissions.includes(permission.id)}\r\n                          onChange={() => togglePermission(permission.id)}\r\n                          className=\"mr-2\"\r\n                        />\r\n                        <span className=\"text-sm text-gray-700\">\r\n                          {permission.description || permission.name}\r\n                        </span>\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-outline\"\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Creating...' : 'Create Role'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Edit Role Modal Component\r\nconst EditRoleModal: React.FC<{\r\n  role: Role\r\n  permissions: Permission[]\r\n  onClose: () => void\r\n  onSubmit: (data: any) => void\r\n  isLoading: boolean\r\n}> = ({ role, permissions, onClose, onSubmit, isLoading }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: role.name,\r\n    description: role.description || '',\r\n    isActive: role.isActive,\r\n    permissions: role.permissions?.map(rp => rp.permissionId) || []\r\n  })\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    onSubmit(formData)\r\n  }\r\n\r\n  const togglePermission = (permissionId: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: prev.permissions.includes(permissionId)\r\n        ? prev.permissions.filter(id => id !== permissionId)\r\n        : [...prev.permissions, permissionId]\r\n    }))\r\n  }\r\n\r\n  // Group permissions by category\r\n  const groupedPermissions = permissions.reduce((acc, permission) => {\r\n    if (!acc[permission.category]) {\r\n      acc[permission.category] = []\r\n    }\r\n    acc[permission.category].push(permission)\r\n    return acc\r\n  }, {} as Record<string, Permission[]>)\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Edit Role</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"label\">Role Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n              className=\"input\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"label\">Description</label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              className=\"input\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.isActive}\r\n                onChange={(e) => setFormData({...formData, isActive: e.target.checked})}\r\n                className=\"mr-2\"\r\n              />\r\n              Active\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"label\">Permissions</label>\r\n            <div className=\"max-h-64 overflow-y-auto border rounded-lg p-4\">\r\n              {Object.entries(groupedPermissions).map(([category, categoryPermissions]) => (\r\n                <div key={category} className=\"mb-4\">\r\n                  <h4 className=\"font-medium text-gray-900 mb-2 capitalize\">{category}</h4>\r\n                  <div className=\"space-y-2\">\r\n                    {categoryPermissions.map((permission) => (\r\n                      <label key={permission.id} className=\"flex items-center\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={formData.permissions.includes(permission.id)}\r\n                          onChange={() => togglePermission(permission.id)}\r\n                          className=\"mr-2\"\r\n                        />\r\n                        <span className=\"text-sm text-gray-700\">\r\n                          {permission.description || permission.name}\r\n                        </span>\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-outline\"\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Updating...' : 'Update Role'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Assign Role Modal Component\r\nconst AssignRoleModal: React.FC<{\r\n  role: Role | null\r\n  employees: Employee[]\r\n  onClose: () => void\r\n  onSubmit: (data: any) => void\r\n  isLoading: boolean\r\n}> = ({ role, employees, onClose, onSubmit, isLoading }) => {\r\n  const [formData, setFormData] = useState({\r\n    userId: '',\r\n    roleId: role?.id || ''\r\n  })\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    onSubmit(formData)\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Assign Role</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"label\">Role</label>\r\n            <input\r\n              type=\"text\"\r\n              value={role?.name || ''}\r\n              className=\"input\"\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"label\">Employee</label>\r\n            <select\r\n              value={formData.userId}\r\n              onChange={(e) => setFormData({...formData, userId: e.target.value})}\r\n              className=\"input\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map((employee) => (\r\n                <option key={employee.id} value={employee.user.id}>\r\n                  {employee.user.firstName} {employee.user.lastName} ({employee.user.email})\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-outline\"\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Assigning...' : 'Assign Role'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoleManagement\r\n"],"names":["roleService","api","id","data","userId","roleId","permissionService","RoleManagement","showCreateModal","setShowCreateModal","useState","editingRole","setEditingRole","showAssignModal","setShowAssignModal","selectedRole","setSelectedRole","searchTerm","setSearchTerm","queryClient","useQueryClient","roles","isLoading","useQuery","permissionsData","employeesData","employeeService","createRoleMutation","useMutation","toast","error","_b","_a","updateRoleMutation","deleteRoleMutation","assignRoleMutation","handleCreateRole","handleUpdateRole","handleDeleteRole","handleAssignRole","filteredRoles","role","jsxs","jsx","Plus","UserCheck","e","Shield","Key","Users","Edit","Trash2","CreateRoleModal","EditRoleModal","AssignRoleModal","permissions","onClose","onSubmit","formData","setFormData","handleSubmit","togglePermission","permissionId","prev","groupedPermissions","acc","permission","category","categoryPermissions","rp","employees","employee"],"mappings":"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"}